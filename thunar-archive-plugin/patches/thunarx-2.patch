diff -Naur orig/configure patched/configure
--- orig/configure	2017-12-14 03:13:14.000000000 +0100
+++ patched/configure	2018-01-08 23:26:19.506606743 +0100
@@ -14643,22 +14643,22 @@
 
 
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for thunarx-3 >= 0.4.0" >&5
-$as_echo_n "checking for thunarx-3 >= 0.4.0... " >&6; }
-  if $PKG_CONFIG "--atleast-version=0.4.0" "thunarx-3" >/dev/null 2>&1; then
-    THUNARX_VERSION=`$PKG_CONFIG --modversion "thunarx-3"`
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for thunarx-2 >= 0.4.0" >&5
+$as_echo_n "checking for thunarx-2 >= 0.4.0... " >&6; }
+  if $PKG_CONFIG "--atleast-version=0.4.0" "thunarx-2" >/dev/null 2>&1; then
+    THUNARX_VERSION=`$PKG_CONFIG --modversion "thunarx-2"`
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: $THUNARX_VERSION" >&5
 $as_echo "$THUNARX_VERSION" >&6; }
 
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking THUNARX_CFLAGS" >&5
 $as_echo_n "checking THUNARX_CFLAGS... " >&6; }
-    THUNARX_CFLAGS=`$PKG_CONFIG --cflags "thunarx-3"`
+    THUNARX_CFLAGS=`$PKG_CONFIG --cflags "thunarx-2"`
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: $THUNARX_CFLAGS" >&5
 $as_echo "$THUNARX_CFLAGS" >&6; }
 
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking THUNARX_LIBS" >&5
 $as_echo_n "checking THUNARX_LIBS... " >&6; }
-    THUNARX_LIBS=`$PKG_CONFIG --libs "thunarx-3"`
+    THUNARX_LIBS=`$PKG_CONFIG --libs "thunarx-2"`
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: $THUNARX_LIBS" >&5
 $as_echo "$THUNARX_LIBS" >&6; }
 
@@ -14670,15 +14670,15 @@
 
 
 
-  elif $PKG_CONFIG --exists "thunarx-3" >/dev/null 2>&1; then
-    xdt_cv_version=`$PKG_CONFIG --modversion "thunarx-3"`
+  elif $PKG_CONFIG --exists "thunarx-2" >/dev/null 2>&1; then
+    xdt_cv_version=`$PKG_CONFIG --modversion "thunarx-2"`
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: found, but $xdt_cv_version" >&5
 $as_echo "found, but $xdt_cv_version" >&6; }
 
 
-      echo "*** The required package thunarx-3 was found on your system,"
+      echo "*** The required package thunarx-2 was found on your system,"
       echo "*** but the installed version ($xdt_cv_version) is too old."
-      echo "*** Please upgrade thunarx-3 to atleast version 0.4.0, or adjust"
+      echo "*** Please upgrade thunarx-2 to atleast version 0.4.0, or adjust"
       echo "*** the PKG_CONFIG_PATH environment variable if you installed"
       echo "*** the new version of the package in a nonstandard prefix so"
       echo "*** pkg-config is able to find it."
@@ -14689,8 +14689,8 @@
 $as_echo "not found" >&6; }
 
 
-      echo "*** The required package thunarx-3 was not found on your system."
-      echo "*** Please install thunarx-3 (atleast version 0.4.0) or adjust"
+      echo "*** The required package thunarx-2 was not found on your system."
+      echo "*** Please install thunarx-2 (atleast version 0.4.0) or adjust"
       echo "*** the PKG_CONFIG_PATH environment variable if you"
       echo "*** installed the package in a nonstandard prefix so that"
       echo "*** pkg-config is able to find it."
@@ -14838,22 +14838,22 @@
 
 
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for exo-2 >= 0.10.0" >&5
-$as_echo_n "checking for exo-2 >= 0.10.0... " >&6; }
-  if $PKG_CONFIG "--atleast-version=0.10.0" "exo-2" >/dev/null 2>&1; then
-    EXO_VERSION=`$PKG_CONFIG --modversion "exo-2"`
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for exo-1 >= 0.10.0" >&5
+$as_echo_n "checking for exo-1 >= 0.10.0... " >&6; }
+  if $PKG_CONFIG "--atleast-version=0.10.0" "exo-1" >/dev/null 2>&1; then
+    EXO_VERSION=`$PKG_CONFIG --modversion "exo-1"`
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: $EXO_VERSION" >&5
 $as_echo "$EXO_VERSION" >&6; }
 
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking EXO_CFLAGS" >&5
 $as_echo_n "checking EXO_CFLAGS... " >&6; }
-    EXO_CFLAGS=`$PKG_CONFIG --cflags "exo-2"`
+    EXO_CFLAGS=`$PKG_CONFIG --cflags "exo-1"`
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: $EXO_CFLAGS" >&5
 $as_echo "$EXO_CFLAGS" >&6; }
 
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking EXO_LIBS" >&5
 $as_echo_n "checking EXO_LIBS... " >&6; }
-    EXO_LIBS=`$PKG_CONFIG --libs "exo-2"`
+    EXO_LIBS=`$PKG_CONFIG --libs "exo-1"`
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: $EXO_LIBS" >&5
 $as_echo "$EXO_LIBS" >&6; }
 
@@ -14865,15 +14865,15 @@
 
 
 
-  elif $PKG_CONFIG --exists "exo-2" >/dev/null 2>&1; then
-    xdt_cv_version=`$PKG_CONFIG --modversion "exo-2"`
+  elif $PKG_CONFIG --exists "exo-1" >/dev/null 2>&1; then
+    xdt_cv_version=`$PKG_CONFIG --modversion "exo-1"`
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: found, but $xdt_cv_version" >&5
 $as_echo "found, but $xdt_cv_version" >&6; }
 
 
-      echo "*** The required package exo-2 was found on your system,"
+      echo "*** The required package exo-1 was found on your system,"
       echo "*** but the installed version ($xdt_cv_version) is too old."
-      echo "*** Please upgrade exo-2 to atleast version 0.10.0, or adjust"
+      echo "*** Please upgrade exo-1 to atleast version 0.10.0, or adjust"
       echo "*** the PKG_CONFIG_PATH environment variable if you installed"
       echo "*** the new version of the package in a nonstandard prefix so"
       echo "*** pkg-config is able to find it."
@@ -14884,8 +14884,8 @@
 $as_echo "not found" >&6; }
 
 
-      echo "*** The required package exo-2 was not found on your system."
-      echo "*** Please install exo-2 (atleast version 0.10.0) or adjust"
+      echo "*** The required package exo-1 was not found on your system."
+      echo "*** Please install exo-1 (atleast version 0.10.0) or adjust"
       echo "*** the PKG_CONFIG_PATH environment variable if you"
       echo "*** installed the package in a nonstandard prefix so that"
       echo "*** pkg-config is able to find it."
diff -Naur orig/configure.ac patched/configure.ac
--- orig/configure.ac	2017-12-14 03:13:11.000000000 +0100
+++ patched/configure.ac	2018-01-08 23:26:16.902556261 +0100
@@ -84,8 +84,8 @@
 dnl ***********************************
 dnl *** Check for required packages ***
 dnl ***********************************
-XDT_CHECK_PACKAGE([THUNARX], [thunarx-3], [0.4.0])
-XDT_CHECK_PACKAGE([EXO], [exo-2], [0.10.0])
+XDT_CHECK_PACKAGE([THUNARX], [thunarx-2], [0.4.0])
+XDT_CHECK_PACKAGE([EXO], [exo-1], [0.10.0])
 XDT_CHECK_PACKAGE([LIBXFCE4UTIL], [libxfce4util-1.0], [4.12.0])
 
 dnl ***********************************
diff -Naur orig/thunar-archive-plugin/Makefile.am patched/thunar-archive-plugin/Makefile.am
--- orig/thunar-archive-plugin/Makefile.am	2017-10-24 04:31:35.000000000 +0200
+++ patched/thunar-archive-plugin/Makefile.am	2018-01-08 23:21:57.355253893 +0100
@@ -9,7 +9,7 @@
 	-DPACKAGE_LOCALE_DIR=\"$(localedir)\"				\
 	$(PLATFORM_CPPFLAGS)
 
-extensionsdir = $(libdir)/thunarx-3
+extensionsdir = $(libdir)/thunarx-2
 extensions_LTLIBRARIES =						\
 	thunar-archive-plugin.la
 
diff -Naur orig/thunar-archive-plugin/Makefile.in patched/thunar-archive-plugin/Makefile.in
--- orig/thunar-archive-plugin/Makefile.in	2017-12-14 03:13:14.000000000 +0100
+++ patched/thunar-archive-plugin/Makefile.in	2018-01-08 23:22:28.467602908 +0100
@@ -387,7 +387,7 @@
 	-DPACKAGE_LOCALE_DIR=\"$(localedir)\"				\
 	$(PLATFORM_CPPFLAGS)
 
-extensionsdir = $(libdir)/thunarx-3
+extensionsdir = $(libdir)/thunarx-2
 extensions_LTLIBRARIES = \
 	thunar-archive-plugin.la
 
diff -Naur orig/thunar-archive-plugin/tap-provider.c patched/thunar-archive-plugin/tap-provider.c
--- orig/thunar-archive-plugin/tap-provider.c	2017-12-06 04:13:35.000000000 +0100
+++ patched/thunar-archive-plugin/tap-provider.c	2018-01-08 23:24:24.085077098 +0100
@@ -43,13 +43,15 @@
 
 static void   tap_provider_menu_provider_init   (ThunarxMenuProviderIface *iface);
 static void   tap_provider_finalize             (GObject                  *object);
-static GList *tap_provider_get_file_menu_items  (ThunarxMenuProvider      *menu_provider,
+static GList *tap_provider_get_file_actions     (ThunarxMenuProvider      *menu_provider,
                                                  GtkWidget                *window,
                                                  GList                    *files);
-static GList *tap_provider_get_dnd_menu_items   (ThunarxMenuProvider      *menu_provider,
+#if THUNARX_CHECK_VERSION(0,4,1)
+static GList *tap_provider_get_dnd_actions      (ThunarxMenuProvider      *menu_provider,
                                                  GtkWidget                *window,
                                                  ThunarxFileInfo          *folder,
                                                  GList                    *files);
+#endif
 static void   tap_provider_execute              (TapProvider              *tap_provider,
                                                  GPid                    (*action) (const gchar *folder,
                                                                                     GList       *files,
@@ -126,9 +128,11 @@
   "application/x-7z-compressed",
 };
 
-static GQuark tap_item_files_quark;
-static GQuark tap_item_folder_quark;
-static GQuark tap_item_provider_quark;
+static GQuark tap_action_files_quark;
+#if THUNARX_CHECK_VERSION(0,4,1)
+static GQuark tap_action_folder_quark;
+#endif
+static GQuark tap_action_provider_quark;
 
 
 
@@ -144,10 +148,12 @@
 {
   GObjectClass *gobject_class;
 
-  /* determine the "tap-item-files", "tap-item-folder" and "tap-item-provider" quarks */
-  tap_item_files_quark = g_quark_from_string ("tap-item-files");
-  tap_item_folder_quark = g_quark_from_string ("tap-item-folder");
-  tap_item_provider_quark = g_quark_from_string ("tap-item-provider");
+  /* determine the "tap-action-files", "tap-action-folder" and "tap-action-provider" quarks */
+  tap_action_files_quark = g_quark_from_string ("tap-action-files");
+#if THUNARX_CHECK_VERSION(0,4,1)
+  tap_action_folder_quark = g_quark_from_string ("tap-action-folder");
+#endif
+  tap_action_provider_quark = g_quark_from_string ("tap-action-provider");
 
   gobject_class = G_OBJECT_CLASS (klass);
   gobject_class->finalize = tap_provider_finalize;
@@ -158,8 +164,10 @@
 static void
 tap_provider_menu_provider_init (ThunarxMenuProviderIface *iface)
 {
-  iface->get_file_menu_items = tap_provider_get_file_menu_items;
-  iface->get_dnd_menu_items = tap_provider_get_dnd_menu_items;
+  iface->get_file_actions = tap_provider_get_file_actions;
+#if THUNARX_CHECK_VERSION(0,4,1)
+  iface->get_dnd_actions = tap_provider_get_dnd_actions;
+#endif
 }
 
 
@@ -167,6 +175,41 @@
 static void
 tap_provider_init (TapProvider *tap_provider)
 {
+#if !GTK_CHECK_VERSION(2,9,0)
+  GtkIconSource *icon_source;
+  GtkIconSet    *icon_set;
+
+  /* setup our icon factory */
+  tap_provider->icon_factory = gtk_icon_factory_new ();
+  gtk_icon_factory_add_default (tap_provider->icon_factory);
+
+  /* add the "tap-create" stock icon */
+  icon_set = gtk_icon_set_new ();
+  icon_source = gtk_icon_source_new ();
+  gtk_icon_source_set_icon_name (icon_source, "tap-create");
+  gtk_icon_set_add_source (icon_set, icon_source);
+  gtk_icon_factory_add (tap_provider->icon_factory, "tap-create", icon_set);
+  gtk_icon_source_free (icon_source);
+  gtk_icon_set_unref (icon_set);
+
+  /* add the "tap-extract" stock icon */
+  icon_set = gtk_icon_set_new ();
+  icon_source = gtk_icon_source_new ();
+  gtk_icon_source_set_icon_name (icon_source, "tap-extract");
+  gtk_icon_set_add_source (icon_set, icon_source);
+  gtk_icon_factory_add (tap_provider->icon_factory, "tap-extract", icon_set);
+  gtk_icon_source_free (icon_source);
+  gtk_icon_set_unref (icon_set);
+
+  /* add the "tap-extract-to" stock icon */
+  icon_set = gtk_icon_set_new ();
+  icon_source = gtk_icon_source_new ();
+  gtk_icon_source_set_icon_name (icon_source, "tap-extract-to");
+  gtk_icon_set_add_source (icon_set, icon_source);
+  gtk_icon_factory_add (tap_provider->icon_factory, "tap-extract-to", icon_set);
+  gtk_icon_source_free (icon_source);
+  gtk_icon_set_unref (icon_set);
+#endif /* !GTK_CHECK_VERSION(2,9,0) */
 }
 
 
@@ -186,6 +229,12 @@
       source = g_main_context_find_source_by_id (NULL, tap_provider->child_watch_id);
       g_source_set_callback (source, (GSourceFunc) g_spawn_close_pid, NULL, NULL);
     }
+  
+#if !GTK_CHECK_VERSION(2,9,0)
+  /* release our icon factory */
+  gtk_icon_factory_remove_default (tap_provider->icon_factory);
+  g_object_unref (G_OBJECT (tap_provider->icon_factory));
+#endif
 
   (*G_OBJECT_CLASS (tap_provider_parent_class)->finalize) (object);
 }
@@ -238,33 +287,37 @@
 
 
 static void
-tap_extract_here (ThunarxMenuItem *item,
-                  GtkWidget       *window)
+tap_extract_here (GtkAction *action,
+                  GtkWidget *window)
 {
+#if THUNARX_CHECK_VERSION(0,4,1)
   ThunarxFileInfo *folder;
+#endif
   TapProvider     *tap_provider;
   GList           *files;
   gchar           *dirname;
   gchar           *uri;
 
-  /* determine the files associated with the item */
-  files = g_object_get_qdata (G_OBJECT (item), tap_item_files_quark);
+  /* determine the files associated with the action */
+  files = g_object_get_qdata (G_OBJECT (action), tap_action_files_quark);
   if (G_UNLIKELY (files == NULL))
     return;
 
-  /* determine the provider associated with the item */
-  tap_provider = g_object_get_qdata (G_OBJECT (item), tap_item_provider_quark);
+  /* determine the provider associated with the action */
+  tap_provider = g_object_get_qdata (G_OBJECT (action), tap_action_provider_quark);
   if (G_UNLIKELY (tap_provider == NULL))
     return;
 
-  /* check if a folder was supplied (for the Drag'n'Drop item) */
-  folder = g_object_get_qdata (G_OBJECT (item), tap_item_folder_quark);
+#if THUNARX_CHECK_VERSION(0,4,1)
+  /* check if a folder was supplied (for the Drag'n'Drop action) */
+  folder = g_object_get_qdata (G_OBJECT (action), tap_action_folder_quark);
   if (G_UNLIKELY (folder != NULL))
     {
       /* determine the URI of the supplied folder */
       uri = thunarx_file_info_get_uri (folder);
     }
   else
+#endif
     {
       /* determine the parent URI of the first selected file */
       uri = thunarx_file_info_get_parent_uri (files->data);
@@ -279,7 +332,7 @@
       /* verify that we were able to determine a local path */
       if (G_LIKELY (dirname != NULL))
         {
-          /* execute the action associated with the menu item */
+          /* execute the action */
           tap_provider_execute (tap_provider, tap_backend_extract_here, window, dirname, files, _("Failed to extract files"));
 
           /* release the dirname */
@@ -294,20 +347,20 @@
 
 
 static void
-tap_extract_to (ThunarxMenuItem *item,
-                GtkWidget       *window)
+tap_extract_to (GtkAction *action,
+                GtkWidget *window)
 {
   TapProvider *tap_provider;
   const gchar *default_dir;
   GList       *files;
 
-  /* determine the files associated with the item */
-  files = g_object_get_qdata (G_OBJECT (item), tap_item_files_quark);
+  /* determine the files associated with the action */
+  files = g_object_get_qdata (G_OBJECT (action), tap_action_files_quark);
   if (G_UNLIKELY (files == NULL))
     return;
 
-  /* determine the provider associated with the item */
-  tap_provider = g_object_get_qdata (G_OBJECT (item), tap_item_provider_quark);
+  /* determine the provider associated with the action */
+  tap_provider = g_object_get_qdata (G_OBJECT (action), tap_action_provider_quark);
   if (G_UNLIKELY (tap_provider == NULL))
     return;
 
@@ -318,28 +371,28 @@
   if (G_LIKELY (default_dir == NULL))
     default_dir = g_get_home_dir ();
 
-  /* execute the action associated with the menu item */
+  /* execute the action */
   tap_provider_execute (tap_provider, tap_backend_extract_to, window, default_dir, files, _("Failed to extract files"));
 }
 
 
 
 static void
-tap_create_archive (ThunarxMenuItem *item,
-                    GtkWidget       *window)
+tap_create_archive (GtkAction *action,
+                    GtkWidget *window)
 {
   TapProvider *tap_provider;
   GList       *files;
   gchar       *dirname;
   gchar       *uri;
 
-  /* determine the files associated with the item */
-  files = g_object_get_qdata (G_OBJECT (item), tap_item_files_quark);
+  /* determine the files associated with the action */
+  files = g_object_get_qdata (G_OBJECT (action), tap_action_files_quark);
   if (G_UNLIKELY (files == NULL))
     return;
 
-  /* determine the provider associated with the item */
-  tap_provider = g_object_get_qdata (G_OBJECT (item), tap_item_provider_quark);
+  /* determine the provider associated with the action */
+  tap_provider = g_object_get_qdata (G_OBJECT (action), tap_action_provider_quark);
   if (G_UNLIKELY (tap_provider == NULL))
     return;
 
@@ -356,7 +409,7 @@
   if (G_UNLIKELY (dirname == NULL))
     return;
 
-  /* execute the action associated with the menu item */
+  /* execute the action */
   tap_provider_execute (tap_provider, tap_backend_create_archive, window, dirname, files, _("Failed to create archive"));
 
   /* cleanup */
@@ -366,17 +419,17 @@
 
 
 static GList*
-tap_provider_get_file_menu_items (ThunarxMenuProvider *menu_provider,
-                                  GtkWidget           *window,
-                                  GList               *files)
+tap_provider_get_file_actions (ThunarxMenuProvider *menu_provider,
+                               GtkWidget           *window,
+                               GList               *files)
 {
   gchar              *scheme;
   TapProvider        *tap_provider = TAP_PROVIDER (menu_provider);
-  ThunarxMenuItem    *item;
+  GtkAction          *action;
   GClosure           *closure;
   gboolean            all_archives = TRUE;
   gboolean            can_write = TRUE;
-  GList              *items = NULL;
+  GList              *actions = NULL;
   GList              *lp;
   gint                n_files = 0;
 
@@ -409,83 +462,99 @@
       /* check if we can write to the parent folders */
       if (G_LIKELY (can_write))
         {
-          /* append the "Extract Here" menu item */
-          item = thunarx_menu_item_new ("Tap::extract-here",
-                                        _("Extract _Here"),
-                                        dngettext (GETTEXT_PACKAGE,
-                                                   "Extract the selected archive in the current folder",
-                                                   "Extract the selected archives in the current folder",
-                                                   n_files),
-                                        "tap-extract");
-
-          g_object_set_qdata_full (G_OBJECT (item), tap_item_files_quark,
+          /* append the "Extract Here" action */
+          action = g_object_new (GTK_TYPE_ACTION,
+                                 "name", "Tap::extract-here",
+                                 "label", _("Extract _Here"),
+#if !GTK_CHECK_VERSION(2,9,0)
+                                 "stock-id", "tap-extract",
+#else
+                                 "icon-name", "tap-extract",
+#endif
+                                 "tooltip", dngettext (GETTEXT_PACKAGE,
+                                                       "Extract the selected archive in the current folder",
+                                                       "Extract the selected archives in the current folder",
+                                                       n_files),
+                                 NULL);
+          g_object_set_qdata_full (G_OBJECT (action), tap_action_files_quark,
                                    thunarx_file_info_list_copy (files),
                                    (GDestroyNotify) thunarx_file_info_list_free);
-          g_object_set_qdata_full (G_OBJECT (item), tap_item_provider_quark,
+          g_object_set_qdata_full (G_OBJECT (action), tap_action_provider_quark,
                                    g_object_ref (G_OBJECT (tap_provider)),
                                    (GDestroyNotify) g_object_unref);
           closure = g_cclosure_new_object (G_CALLBACK (tap_extract_here), G_OBJECT (window));
-          g_signal_connect_closure (G_OBJECT (item), "activate", closure, TRUE);
-          items = g_list_append (items, item);
+          g_signal_connect_closure (G_OBJECT (action), "activate", closure, TRUE);
+          actions = g_list_append (actions, action);
         }
 
-      /* append the "Extract To..." menu item */
-      item = thunarx_menu_item_new ("Tap::extract-to",
-                                    _("_Extract To..."),
-                                    dngettext (GETTEXT_PACKAGE,
-                                               "Extract the selected archive",
-                                               "Extract the selected archives",
-                                               n_files),
-                                    "tap-extract-to");
-
-      g_object_set_qdata_full (G_OBJECT (item), tap_item_files_quark,
+      /* append the "Extract To..." action */
+      action = g_object_new (GTK_TYPE_ACTION,
+                             "label", _("_Extract To..."),
+                             "name", "Tap::extract-to",
+#if !GTK_CHECK_VERSION(2,9,0)
+                             "stock-id", "tap-extract-to",
+#else
+                             "icon-name", "tap-extract-to",
+#endif
+                             "tooltip", dngettext (GETTEXT_PACKAGE,
+                                                   "Extract the selected archive",
+                                                   "Extract the selected archives",
+                                                   n_files),
+                             NULL);
+      g_object_set_qdata_full (G_OBJECT (action), tap_action_files_quark,
                                thunarx_file_info_list_copy (files),
                                (GDestroyNotify) thunarx_file_info_list_free);
-      g_object_set_qdata_full (G_OBJECT (item), tap_item_provider_quark,
+      g_object_set_qdata_full (G_OBJECT (action), tap_action_provider_quark,
                                g_object_ref (G_OBJECT (tap_provider)),
                                (GDestroyNotify) g_object_unref);
       closure = g_cclosure_new_object (G_CALLBACK (tap_extract_to), G_OBJECT (window));
-      g_signal_connect_closure (G_OBJECT (item), "activate", closure, TRUE);
-      items = g_list_append (items, item);
+      g_signal_connect_closure (G_OBJECT (action), "activate", closure, TRUE);
+      actions = g_list_append (actions, action);
     }
 
   /* check if more than one files was given or the file is not an archive */
   if (G_LIKELY (n_files > 1 || !all_archives))
     {
-      /* append the "Create Archive..." menu item */
-      item = thunarx_menu_item_new ("Tap::create-archive",
-                                    _("Cr_eate Archive..."),
-                                    dngettext (GETTEXT_PACKAGE,
-                                               "Create an archive with the selected object",
-                                               "Create an archive with the selected objects",
-                                               n_files),
-                                    "tap-create");
-
-      g_object_set_qdata_full (G_OBJECT (item), tap_item_files_quark,
+      /* append the "Create Archive..." action */
+      action = g_object_new (GTK_TYPE_ACTION,
+                             "label", _("Cr_eate Archive..."),
+                             "name", "Tap::create-archive",
+#if !GTK_CHECK_VERSION(2,9,0)
+                             "stock-id", "tap-create",
+#else
+                             "icon-name", "tap-create",
+#endif
+                             "tooltip", dngettext (GETTEXT_PACKAGE,
+                                                   "Create an archive with the selected object",
+                                                   "Create an archive with the selected objects",
+                                                   n_files),
+                             NULL);
+      g_object_set_qdata_full (G_OBJECT (action), tap_action_files_quark,
                                thunarx_file_info_list_copy (files),
                                (GDestroyNotify) thunarx_file_info_list_free);
-      g_object_set_qdata_full (G_OBJECT (item), tap_item_provider_quark,
+      g_object_set_qdata_full (G_OBJECT (action), tap_action_provider_quark,
                                g_object_ref (G_OBJECT (tap_provider)),
                                (GDestroyNotify) g_object_unref);
       closure = g_cclosure_new_object (G_CALLBACK (tap_create_archive), G_OBJECT (window));
-      g_signal_connect_closure (G_OBJECT (item), "activate", closure, TRUE);
-      items = g_list_append (items, item);
+      g_signal_connect_closure (G_OBJECT (action), "activate", closure, TRUE);
+      actions = g_list_append (actions, action);
     }
 
-  return items;
+  return actions;
 }
 
 
 
+#if THUNARX_CHECK_VERSION(0,4,1)
 static GList*
-tap_provider_get_dnd_menu_items (ThunarxMenuProvider *menu_provider,
-                                 GtkWidget           *window,
-                                 ThunarxFileInfo     *folder,
-                                 GList               *files)
+tap_provider_get_dnd_actions (ThunarxMenuProvider *menu_provider,
+                              GtkWidget           *window,
+                              ThunarxFileInfo     *folder,
+                              GList               *files)
 {
   gchar              *scheme;
   TapProvider        *tap_provider = TAP_PROVIDER (menu_provider);
-  ThunarxMenuItem    *item;
+  GtkAction          *action;
   GClosure           *closure;
   GList              *lp;
   gint                n_files = 0;
@@ -520,31 +589,37 @@
         return NULL;
     }
 
-  /* setup the "Extract here" menu item */
-  item = thunarx_menu_item_new ("Tap::extract-here-dnd",
-                                /* TRANSLATORS: This is the label of the Drag'n'Drop "Extract here" menu item */
-                                _("_Extract here"),
-                                dngettext (GETTEXT_PACKAGE,
-                                           "Extract the selected archive here",
-                                           "Extract the selected archives here",
-                                           n_files),
-                                "tap-extract");
-
-  g_object_set_qdata_full (G_OBJECT (item), tap_item_files_quark,
+  /* setup the "Extract here" action */
+  action = g_object_new (GTK_TYPE_ACTION,
+                         "name", "Tap::extract-here-dnd",
+                         /* TRANSLATORS: This is the label of the Drag'n'Drop "Extract here" action */
+                         "label", _("_Extract here"),
+#if !GTK_CHECK_VERSION(2,9,0)
+                         "stock-id", "tap-extract",
+#else
+                         "icon-name", "tap-extract",
+#endif
+                         "tooltip", dngettext (GETTEXT_PACKAGE,
+                                               "Extract the selected archive here",
+                                               "Extract the selected archives here",
+                                               n_files),
+                         NULL);
+  g_object_set_qdata_full (G_OBJECT (action), tap_action_files_quark,
                            thunarx_file_info_list_copy (files),
                            (GDestroyNotify) thunarx_file_info_list_free);
-  g_object_set_qdata_full (G_OBJECT (item), tap_item_provider_quark,
+  g_object_set_qdata_full (G_OBJECT (action), tap_action_provider_quark,
                            g_object_ref (G_OBJECT (tap_provider)),
                            (GDestroyNotify) g_object_unref);
-  g_object_set_qdata_full (G_OBJECT (item), tap_item_folder_quark,
+  g_object_set_qdata_full (G_OBJECT (action), tap_action_folder_quark,
                            g_object_ref (G_OBJECT (folder)),
                            (GDestroyNotify) g_object_unref);
   closure = g_cclosure_new_object (G_CALLBACK (tap_extract_here), G_OBJECT (window));
-  g_signal_connect_closure (G_OBJECT (item), "activate", closure, TRUE);
+  g_signal_connect_closure (G_OBJECT (action), "activate", closure, TRUE);
 
-  /* return a list with only the "Extract here" item */
-  return g_list_prepend (NULL, item);
+  /* return a list with only the "Extract here" action */
+  return g_list_prepend (NULL, action);
 }
+#endif
 
 
 
