From 14420eff8a5ed676bfbecc833ad854bb143d704c Mon Sep 17 00:00:00 2001
From: Kai Sommerfeld <kai.sommerfeld@gmx.com>
Date: Tue, 23 Apr 2019 23:31:06 +0200
Subject: Implement PVR addon API v6.0.0


diff --git a/pvr.vdr.vnsi/addon.xml.in b/pvr.vdr.vnsi/addon.xml.in
index 1345e5e..7d7ab24 100644
--- a/pvr.vdr.vnsi/addon.xml.in
+++ b/pvr.vdr.vnsi/addon.xml.in
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <addon
   id="pvr.vdr.vnsi"
-  version="3.6.3"
+  version="4.0.0"
   name="VDR VNSI Client"
   provider-name="Team Kodi, FernetMenta">
   <requires>@ADDON_DEPENDS@</requires>
diff --git a/pvr.vdr.vnsi/changelog.txt b/pvr.vdr.vnsi/changelog.txt
index 059ca10..78c06b4 100644
--- a/pvr.vdr.vnsi/changelog.txt
+++ b/pvr.vdr.vnsi/changelog.txt
@@ -1,3 +1,6 @@
+4.0.0
+- Update to PVR addon API v6.0.0
+
 3.6.3
 - With this version, kodi-pvr is upstream repo for this addon again. 
 - Merged sources from FernetMenta/pvr.vdr.vnsi master.
diff --git a/src/VNSIData.cpp b/src/VNSIData.cpp
index 57168b0..9a568d5 100644
--- a/src/VNSIData.cpp
+++ b/src/VNSIData.cpp
@@ -299,11 +299,11 @@ bool cVNSIData::GetChannelsList(ADDON_HANDLE handle, bool radio)
   return true;
 }
 
-bool cVNSIData::GetEPGForChannel(ADDON_HANDLE handle, const PVR_CHANNEL &channel, time_t start, time_t end)
+bool cVNSIData::GetEPGForChannel(ADDON_HANDLE handle, int iChannelUid, time_t start, time_t end)
 {
   cRequestPacket vrp;
   vrp.init(VNSI_EPG_GETFORCHANNEL);
-  vrp.add_U32(channel.iUniqueId);
+  vrp.add_U32(iChannelUid);
   vrp.add_U32(start);
   vrp.add_U32(end - start);
 
@@ -319,7 +319,7 @@ bool cVNSIData::GetEPGForChannel(ADDON_HANDLE handle, const PVR_CHANNEL &channel
     EPG_TAG tag;
     memset(&tag, 0 , sizeof(tag));
 
-    tag.iUniqueChannelId    = channel.iUniqueId;
+    tag.iUniqueChannelId    = iChannelUid;
     tag.iUniqueBroadcastId  = vresp->extract_U32();
     tag.startTime           = vresp->extract_U32();
     tag.endTime             = tag.startTime + vresp->extract_U32();
diff --git a/src/VNSIData.h b/src/VNSIData.h
index 5cc64c3..7c6a14a 100644
--- a/src/VNSIData.h
+++ b/src/VNSIData.h
@@ -44,7 +44,7 @@ public:
 
   int         GetChannelsCount();
   bool        GetChannelsList(ADDON_HANDLE handle, bool radio = false);
-  bool        GetEPGForChannel(ADDON_HANDLE handle, const PVR_CHANNEL &channel, time_t start, time_t end);
+  bool        GetEPGForChannel(ADDON_HANDLE handle, int iChannelUid, time_t start, time_t end);
 
   int         GetChannelGroupCount(bool automatic);
   bool        GetChannelGroupList(ADDON_HANDLE handle, bool bRadio);
diff --git a/src/client.cpp b/src/client.cpp
index 0ea4615..2b8e299 100644
--- a/src/client.cpp
+++ b/src/client.cpp
@@ -444,13 +444,13 @@ PVR_ERROR OpenDialogChannelScan(void)
 /*******************************************/
 /** PVR EPG Functions                     **/
 
-PVR_ERROR GetEPGForChannel(ADDON_HANDLE handle, const PVR_CHANNEL &channel, time_t iStart, time_t iEnd)
+PVR_ERROR GetEPGForChannel(ADDON_HANDLE handle, int iChannelUid, time_t iStart, time_t iEnd)
 {
   if (!VNSIData)
     return PVR_ERROR_SERVER_ERROR;
 
   try {
-    return (VNSIData->GetEPGForChannel(handle, channel, iStart, iEnd) ? PVR_ERROR_NO_ERROR: PVR_ERROR_SERVER_ERROR);
+    return (VNSIData->GetEPGForChannel(handle, iChannelUid, iStart, iEnd) ? PVR_ERROR_NO_ERROR: PVR_ERROR_SERVER_ERROR);
   } catch (std::exception e) {
     XBMC->Log(LOG_ERROR, "%s - %s", __FUNCTION__, e.what());
     return PVR_ERROR_SERVER_ERROR;
@@ -865,17 +865,6 @@ bool SeekTime(double time, bool backwards, double *startpts)
   return ret;
 }
 
-bool IsTimeshifting()
-{
-  bool ret = false;
-  if (VNSIDemuxer)
-  {
-    const CLockObject lock(TimeshiftMutex);
-    ret = IsTimeshift;
-  }
-  return ret;
-}
-
 void SetSpeed(int) {};
 void PauseStream(bool bPaused) {}
 
@@ -992,6 +981,7 @@ PVR_ERROR OpenDialogChannelSettings(const PVR_CHANNEL &channel) { return PVR_ERR
 PVR_ERROR OpenDialogChannelAdd(const PVR_CHANNEL &channel) { return PVR_ERROR_NOT_IMPLEMENTED; }
 void DemuxReset(void) {}
 void DemuxFlush(void) {}
+void FillBuffer(bool mode) {}
 int ReadLiveStream(unsigned char *pBuffer, unsigned int iBufferSize) { return 0; }
 long long SeekLiveStream(long long iPosition, int iWhence /* = SEEK_SET */) { return -1; }
 long long LengthLiveStream(void) { return -1; }
