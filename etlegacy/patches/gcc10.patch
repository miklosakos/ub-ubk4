diff -Naur orig/src/cgame/cg_draw_hud.c patched/src/cgame/cg_draw_hud.c
--- orig/src/cgame/cg_draw_hud.c	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/cgame/cg_draw_hud.c	2020-09-10 23:22:35.721507117 +0200
@@ -111,6 +111,8 @@
 hudStucture_t *activehud;
 hudStucture_t hud0;
 
+lagometer_t lagometer;
+
 /*
  * @brief CG_getRect
  * @param x
diff -Naur orig/src/cgame/cg_local.h patched/src/cgame/cg_local.h
--- orig/src/cgame/cg_local.h	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/cgame/cg_local.h	2020-09-10 23:22:35.721507117 +0200
@@ -2033,8 +2033,6 @@
 	int snapshotCount;
 } lagometer_t;
 
-lagometer_t lagometer;
-
 /**
  * @enum sample_s
  * @typedef sample_t
diff -Naur orig/src/client/snd_local.h patched/src/client/snd_local.h
--- orig/src/client/snd_local.h	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/client/snd_local.h	2020-09-10 23:22:35.721507117 +0200
@@ -294,6 +294,7 @@
 extern cvar_t *s_doppler;
 
 extern cvar_t *s_testsound;
+extern cvar_t *s_debugStreams;
 
 extern float s_volCurrent;
 
diff -Naur orig/src/client/snd_openal.c patched/src/client/snd_openal.c
--- orig/src/client/snd_openal.c	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/client/snd_openal.c	2020-09-10 23:22:35.721507117 +0200
@@ -55,7 +55,6 @@
 //cvar_t *s_alInputDevice;
 cvar_t *s_alAvailableDevices;
 //cvar_t *s_alAvailableInputDevices;
-cvar_t *s_debugStreams;
 
 static qboolean enumeration_ext     = qfalse;
 static qboolean enumeration_all_ext = qfalse;
diff -Naur orig/src/irc/irc_client.c patched/src/irc/irc_client.c
--- orig/src/irc/irc_client.c	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/irc/irc_client.c	2020-09-10 23:22:35.721507117 +0200
@@ -37,9 +37,8 @@
 
 // this is FEATURE_IRC_CLIENT and FEATURE_IRC_SERVER only
 
-//#include "../client/client.h"
+#include "../client/client.h"
 #include "htable.h"
-#include "irc_client.h"
 
 #ifdef DEDICATED
 #include "../server/server.h"
@@ -70,6 +69,14 @@
 # endif
 #endif
 
+cvar_t *irc_mode;
+cvar_t *irc_server;
+cvar_t *irc_channel;
+cvar_t *irc_port;
+cvar_t *irc_nickname;
+cvar_t *irc_kick_rejoin;
+cvar_t *irc_reconnect_delay;
+
 /*
  * Timing controls
  *
diff -Naur orig/src/irc/irc_client.h patched/src/irc/irc_client.h
--- orig/src/irc/irc_client.h	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/irc/irc_client.h	2020-09-10 23:22:35.721507117 +0200
@@ -40,13 +40,13 @@
 #define IRC_CLIENT_H
 
 /* IRC control cvars */
-cvar_t *irc_mode;
-cvar_t *irc_server;
-cvar_t *irc_channel;
-cvar_t *irc_port;
-cvar_t *irc_nickname;
-cvar_t *irc_kick_rejoin;
-cvar_t *irc_reconnect_delay;
+extern cvar_t *irc_mode;
+extern cvar_t *irc_server;
+extern cvar_t *irc_channel;
+extern cvar_t *irc_port;
+extern cvar_t *irc_nickname;
+extern cvar_t *irc_kick_rejoin;
+extern cvar_t *irc_reconnect_delay;
 
 #define IRCM_AUTO_CONNECT           1
 #define IRCM_AUTO_OVERRIDE_NICKNAME 2
diff -Naur orig/src/qcommon/common.c patched/src/qcommon/common.c
--- orig/src/qcommon/common.c	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/qcommon/common.c	2020-09-10 23:22:35.725507128 +0200
@@ -124,8 +124,6 @@
 #endif
 cvar_t *cl_paused;
 cvar_t *sv_paused;
-cvar_t *cl_packetdelay;
-cvar_t *sv_packetdelay;
 
 cvar_t *com_motd;
 cvar_t *com_motdString;
diff -Naur orig/src/renderer2/tr_shader.c patched/src/renderer2/tr_shader.c
--- orig/src/renderer2/tr_shader.c	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/renderer2/tr_shader.c	2020-09-10 23:28:04.018343912 +0200
@@ -37,7 +37,6 @@
 
 #include "tr_shader.h"
 
-
 static char **guideTextHashTable[MAX_GUIDETEXT_HASH];
 static char **shaderTextHashTable[MAX_SHADERTEXT_HASH];
 
@@ -47,6 +46,18 @@
 static int numMaterialFiles; // R2 files
 static int numShaderFiles;   // R1 files
 
+shaderTable_t *shaderTableHashTable[MAX_SHADERTABLE_HASH];
+shader_t     *shaderHashTable[FILE_HASH_SIZE];
+texModInfo_t texMods[MAX_SHADER_STAGES][TR_MAX_TEXMODS];
+
+shader_t        shader;
+dynamicShader_t *dshader;
+shaderTable_t   table;
+shaderStage_t   stages[MAX_SHADER_STAGES];
+char            implicitMap[MAX_QPATH];
+unsigned        implicitStateBits;
+cullType_t      implicitCullType;
+
 /**
  * @brief R_RemapShader
  * @param[in] shaderName
diff -Naur orig/src/renderer2/tr_shader.h patched/src/renderer2/tr_shader.h
--- orig/src/renderer2/tr_shader.h	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/renderer2/tr_shader.h	2020-09-10 23:28:04.018343912 +0200
@@ -39,13 +39,11 @@
 #include "tr_local.h"
 
 #define MAX_SHADERTABLE_HASH    1024
-static shaderTable_t *shaderTableHashTable[MAX_SHADERTABLE_HASH];
 
 #define MAX_GUIDETEXT_HASH      2048
 #define MAX_SHADERTEXT_HASH     2048
 
 #define FILE_HASH_SIZE          1024
-shader_t *shaderHashTable[FILE_HASH_SIZE];
 
 #define MAX_SHADER_FILES        4096
 #define MAX_GUIDE_FILES         1024
@@ -54,8 +52,6 @@
 
 #define generateHashValue(fname, size) Q_GenerateHashValue(fname, size, qfalse, qtrue)
 
-shader_t shader;
-
 // dynamic shader list
 typedef struct dynamicShader dynamicShader_t;
 struct dynamicShader
@@ -64,20 +60,6 @@
 	dynamicShader_t *next;
 };
 
-dynamicShader_t *dshader;
-
-// the shader is parsed into these global variables, then copied into
-// dynamically allocated memory if it is valid.
-shaderTable_t table;
-shaderStage_t stages[MAX_SHADER_STAGES];
-
-texModInfo_t  texMods[MAX_SHADER_STAGES][TR_MAX_TEXMODS];
-
-// these are only referenced while parsing a shader
-char implicitMap[MAX_QPATH];
-unsigned   implicitStateBits;
-cullType_t implicitCullType;
-
 // scan and load shader files behaviour
 #define R_SCAN_SCRIPTS_FOLDER   0x0001      ///< 1  - scan material in scripts folder
 #define R_SCAN_MATERIAL_FOLDER  0x0002      ///< 2  - scan material in material folder
diff -Naur orig/src/renderer2/tr_shader_r1.c patched/src/renderer2/tr_shader_r1.c
--- orig/src/renderer2/tr_shader_r1.c	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/renderer2/tr_shader_r1.c	2020-09-10 23:28:04.018343912 +0200
@@ -39,6 +39,16 @@
 static char **shaderTextHashTableR1[MAX_SHADERTEXT_HASH];
 static char *s_shaderTextR1;
 
+extern shaderTable_t *shaderTableHashTable[MAX_SHADERTABLE_HASH];
+
+extern shader_t        shader;
+extern dynamicShader_t *dshader;
+extern shaderTable_t   table;
+extern shaderStage_t   stages[MAX_SHADER_STAGES];
+extern char            implicitMap[MAX_QPATH];
+extern unsigned        implicitStateBits;
+extern cullType_t      implicitCullType;
+
 /**
  * @brief ParseVector
  * @param[in,out] text
diff -Naur orig/src/server/server.h patched/src/server/server.h
--- orig/src/server/server.h	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/server/server.h	2020-09-10 23:22:35.725507128 +0200
@@ -470,7 +470,7 @@
 extern cvar_t *sv_demopath;
 extern cvar_t *sv_demoState;
 extern cvar_t *sv_autoDemo;
-extern cvar_t *cl_freezeDemo;
+extern cvar_t *sv_freezeDemo;
 extern cvar_t *sv_demoTolerant;
 
 extern cvar_t *sv_ipMaxClients; ///< limit client connection
diff -Naur orig/src/server/sv_demo.c patched/src/server/sv_demo.c
--- orig/src/server/sv_demo.c	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/server/sv_demo.c	2020-09-10 23:22:35.725507128 +0200
@@ -1807,7 +1807,7 @@
 read_next_demo_frame: // used to read another whole demo frame
 
 	// Demo freezed? Just stop reading the demo frames
-	if (Cvar_VariableIntegerValue("cl_freezeDemo"))
+	if (Cvar_VariableIntegerValue("sv_freezeDemo"))
 	{
 		svs.time = memsvtime; // reset server time to the same time as the previous frame, to avoid the time going backward when resuming the demo (which will disconnect every players)
 		return;
diff -Naur orig/src/server/sv_init.c patched/src/server/sv_init.c
--- orig/src/server/sv_init.c	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/server/sv_init.c	2020-09-10 23:22:35.725507128 +0200
@@ -1141,7 +1141,7 @@
 	sv_demoState    = Cvar_Get("sv_demoState", "0", CVAR_ROM);
 	sv_democlients  = Cvar_Get("sv_democlients", "0", CVAR_ROM);
 	sv_autoDemo     = Cvar_Get("sv_autoDemo", "0", CVAR_ARCHIVE);
-	cl_freezeDemo   = Cvar_Get("cl_freezeDemo", "0", CVAR_TEMP); // port from client-side to freeze server-side demos
+	sv_freezeDemo   = Cvar_Get("cl_freezeDemo", "0", CVAR_TEMP); // port from client-side to freeze server-side demos
 	sv_demoTolerant = Cvar_Get("sv_demoTolerant", "0", CVAR_ARCHIVE);
 	sv_demopath     = Cvar_Get("sv_demopath", "", CVAR_ARCHIVE);
 
diff -Naur orig/src/server/sv_main.c patched/src/server/sv_main.c
--- orig/src/server/sv_main.c	2019-01-05 20:54:35.000000000 +0100
+++ patched/src/server/sv_main.c	2020-09-10 23:22:35.725507128 +0200
@@ -115,7 +115,7 @@
 cvar_t *sv_demopath;
 cvar_t *sv_demoState;
 cvar_t *sv_autoDemo;
-cvar_t *cl_freezeDemo;  // to freeze server-side demos
+cvar_t *sv_freezeDemo;  // to freeze server-side demos
 cvar_t *sv_demoTolerant;
 
 cvar_t *sv_ipMaxClients;
