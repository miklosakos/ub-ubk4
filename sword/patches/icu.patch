diff -Nur orig/include/utf8transliterator.h mod/include/utf8transliterator.h
--- orig/include/utf8transliterator.h	2013-07-18 00:34:43.000000000 +0200
+++ mod/include/utf8transliterator.h	2018-06-04 20:40:17.188328127 +0200
@@ -50,11 +50,11 @@
 class SWModule;
 
 struct SWTransData {
-	UnicodeString resource;
+	icu::UnicodeString resource;
 	UTransDirection dir;
 };
-typedef std::map<const UnicodeString, SWTransData> SWTransMap;
-typedef std::pair<UnicodeString, SWTransData> SWTransPair;
+typedef std::map<const icu::UnicodeString, SWTransData> SWTransMap;
+typedef std::pair<icu::UnicodeString, SWTransData> SWTransPair;
 
 /** This Filter uses ICU for transliteration
 */
@@ -81,7 +81,7 @@
 	bool checkTrans(const UnicodeString& ID, UErrorCode &status);
 #endif
 	bool addTrans(const char* newTrans, SWBuf* transList);
-	Transliterator *createTrans(const UnicodeString& ID, UTransDirection dir, UErrorCode &status);
+	icu::Transliterator *createTrans(const icu::UnicodeString& ID, UTransDirection dir, UErrorCode &status);
 
 public:
 	UTF8Transliterator();
diff -Nur orig/src/modules/filters/scsuutf8.cpp mod/src/modules/filters/scsuutf8.cpp
--- orig/src/modules/filters/scsuutf8.cpp	2017-05-22 06:19:02.000000000 +0200
+++ mod/src/modules/filters/scsuutf8.cpp	2018-06-04 20:47:13.535717911 +0200
@@ -140,7 +140,7 @@
 #ifdef _ICU_
 	// Try decoding with ICU if possible
 	err = U_ZERO_ERROR;
-	UnicodeString utf16Text(text.getRawData(), text.length(), scsuConv, err);
+	icu::UnicodeString utf16Text(text.getRawData(), text.length(), scsuConv, err);
 	err = U_ZERO_ERROR;
 	int32_t len = utf16Text.extract(text.getRawData(), text.size(), utf8Conv, err);
 	if (len > (int32_t)text.size()+1) {
diff -Nur orig/src/modules/filters/utf8nfc.cpp mod/src/modules/filters/utf8nfc.cpp
--- orig/src/modules/filters/utf8nfc.cpp	2014-03-05 20:52:08.000000000 +0100
+++ mod/src/modules/filters/utf8nfc.cpp	2018-06-04 21:19:21.572881899 +0200
@@ -46,11 +46,11 @@
 		return -1;
         
 	err = U_ZERO_ERROR;
-	UnicodeString source(text.getRawData(), text.length(), conv, err);
-	UnicodeString target;
+	icu::UnicodeString source(text.getRawData(), text.length(), conv, err);
+	icu::UnicodeString target;
 
 	err = U_ZERO_ERROR;
-	Normalizer::normalize(source, UNORM_NFC, 0, target, err);
+	icu::Normalizer::normalize(source, UNORM_NFC, 0, target, err);
 
 	err = U_ZERO_ERROR;
 	text.setSize(text.size()*2); // potentially, it can grow to 2x the original size
diff -Nur orig/src/modules/filters/utf8scsu.cpp mod/src/modules/filters/utf8scsu.cpp
--- orig/src/modules/filters/utf8scsu.cpp	2014-03-12 05:34:32.000000000 +0100
+++ mod/src/modules/filters/utf8scsu.cpp	2018-06-04 20:52:53.019212468 +0200
@@ -46,7 +46,7 @@
 		return -1;
 
 	err = U_ZERO_ERROR;
-	UnicodeString utf16Text(text.getRawData(), text.length(), utf8Conv, err);
+	icu::UnicodeString utf16Text(text.getRawData(), text.length(), utf8Conv, err);
 	err = U_ZERO_ERROR;
 	int32_t len = utf16Text.extract(text.getRawData(), text.size(), scsuConv, err);
 	if (len > (int32_t)text.size()+1) {
diff -Nur orig/src/modules/filters/utf8transliterator.cpp mod/src/modules/filters/utf8transliterator.cpp
--- orig/src/modules/filters/utf8transliterator.cpp	2013-07-18 00:44:29.000000000 +0200
+++ mod/src/modules/filters/utf8transliterator.cpp	2018-06-04 21:10:58.181615226 +0200
@@ -328,9 +328,9 @@
 }
 
 
-Transliterator * UTF8Transliterator::createTrans(const UnicodeString& ID, UTransDirection dir, UErrorCode &status )
+icu::Transliterator * UTF8Transliterator::createTrans(const icu::UnicodeString& ID, UTransDirection dir, UErrorCode &status )
 {
-	Transliterator *trans = Transliterator::createInstance(ID,UTRANS_FORWARD,status);
+	icu::Transliterator *trans = icu::Transliterator::createInstance(ID,UTRANS_FORWARD,status);
 	if (U_FAILURE(status)) {
 		delete trans;
 		return NULL;
@@ -906,9 +906,9 @@
                 addTrans("NFC", &ID);
 
                 err = U_ZERO_ERROR;
-                Transliterator * trans = createTrans(UnicodeString(ID), UTRANS_FORWARD, err);
+                icu::Transliterator * trans = createTrans(icu::UnicodeString(ID), UTRANS_FORWARD, err);
                 if (trans && !U_FAILURE(err)) {
-                        UnicodeString target = UnicodeString(source);
+                        icu::UnicodeString target = icu::UnicodeString(source);
 			trans->transliterate(target);
 			text.setSize(text.size()*2);
 			len = ucnv_fromUChars(conv, text.getRawData(), text.size(), target.getBuffer(), target.length(), &err);
