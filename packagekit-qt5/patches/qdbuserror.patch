From be6468e09725627c252cc3d40f3d9b05cfd5b29b Mon Sep 17 00:00:00 2001
From: Raine Makelainen <raine.makelainen@jolla.com>
Date: Tue, 5 Nov 2019 17:32:22 +0200
Subject: [PATCH] Map DBusError::AccessDenied to
 Transaction::ErrorNotAuthorized

This commit maps the DBusError:AccessDenied to Transaction::ErrorNotAuthorized
that seems to closest match. The best would be if the QDBusError itself
would be passed to the errorCode signal but I did not want to alter
the API.
---
 src/transaction.cpp        | 5 ++++-
 src/transactionprivate.cpp | 5 ++++-
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/src/transaction.cpp b/src/transaction.cpp
index 4b717a0..a17b93e 100644
--- a/src/transaction.cpp
+++ b/src/transaction.cpp
@@ -46,7 +46,10 @@ Transaction::Transaction()
     {
         QDBusPendingReply<QDBusObjectPath> reply = *call;
         if (reply.isError()) {
-            errorCode(Transaction::ErrorInternalError, reply.error().message());
+            QDBusError error = reply.error();
+            Transaction::Error transactionError = error.type() == QDBusError::AccessDenied ? Transaction::ErrorNotAuthorized
+                                                                                           : Transaction::ErrorInternalError;
+            errorCode(transactionError, error.message());
             d->finished(Transaction::ExitFailed, 0);
             d->destroy();
         } else {
diff --git a/src/transactionprivate.cpp b/src/transactionprivate.cpp
index 8a40f4c..38a4db6 100644
--- a/src/transactionprivate.cpp
+++ b/src/transactionprivate.cpp
@@ -193,7 +193,10 @@ void TransactionPrivate::runQueuedTransaction()
                q, [this, q] (QDBusPendingCallWatcher *call) {
         QDBusPendingReply<> reply = *call;
         if (reply.isError()) {
-            q->errorCode(Transaction::ErrorInternalError, reply.error().message());
+            QDBusError error = reply.error();
+            Transaction::Error transactionError = error.type() == QDBusError::AccessDenied ? Transaction::ErrorNotAuthorized
+                                                                                           : Transaction::ErrorInternalError;
+            q->errorCode(transactionError, error.message());
             finished(Transaction::ExitFailed, 0);
             destroy();
         }
