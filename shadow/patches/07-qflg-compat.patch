diff -Naur orig/src/groupadd.c patched/src/groupadd.c
--- orig/src/groupadd.c	2018-10-24 05:37:21.000000000 +0200
+++ patched/src/groupadd.c	2019-08-05 00:47:52.466011908 +0200
@@ -388,13 +388,14 @@
 		{"key",        required_argument, NULL, 'K'},
 		{"non-unique", no_argument,       NULL, 'o'},
 		{"password",   required_argument, NULL, 'p'},
+		{"quiet",      no_argument,       NULL, 'q'},
 		{"system",     no_argument,       NULL, 'r'},
 		{"root",       required_argument, NULL, 'R'},
 		{"prefix",     required_argument, NULL, 'P'},
 		{NULL, 0, NULL, '\0'}
 	};
 
-	while ((c = getopt_long (argc, argv, "fg:hK:op:rR:P:",
+	while ((c = getopt_long (argc, argv, "fg:hK:op:qrR:P:",
 		                 long_options, NULL)) != -1) {
 		switch (c) {
 		case 'f':
@@ -446,6 +447,9 @@
 			pflg = true;
 			group_passwd = optarg;
 			break;
+		case 'q': 	/* set 'force' flag for quiet mode */
+			fflg = true;
+			break;
 		case 'r':
 			rflg = true;
 			break;
diff -Naur orig/src/groupdel.c patched/src/groupdel.c
--- orig/src/groupdel.c	2018-10-24 05:37:21.000000000 +0200
+++ patched/src/groupdel.c	2019-08-05 00:47:52.466011908 +0200
@@ -323,17 +323,20 @@
 	int c;
 	static struct option long_options[] = {
 		{"help", no_argument,       NULL, 'h'},
+		{"quiet", no_argument,      NULL, 'q'},
 		{"root", required_argument, NULL, 'R'},
 		{"prefix", required_argument, NULL, 'P'},
 		{NULL, 0, NULL, '\0'}
 	};
 
-	while ((c = getopt_long (argc, argv, "hfR:P:",
+	while ((c = getopt_long (argc, argv, "hfqR:P:",
 	                         long_options, NULL)) != -1) {
 		switch (c) {
 		case 'h':
 			usage (E_SUCCESS);
 			/*@notreached@*/break;
+		case 'q': /* no operation, just for backward compatibility with old UHU patch */
+			break;
 		case 'R': /* no-op, handled in process_root_flag () */
 			break;
 		case 'P': /* no-op, handled in process_prefix_flag () */
diff -Naur orig/src/useradd.c patched/src/useradd.c
--- orig/src/useradd.c	2019-08-05 00:45:55.152011889 +0200
+++ patched/src/useradd.c	2019-08-05 00:47:52.466011908 +0200
@@ -163,6 +163,7 @@
     Mflg = false,		/* do not create user's home directory even if CREATE_HOME is set */
     Nflg = true,		/* do not create a group having the same name as the user, but add the user to def_group (or the group specified with -g) */
     oflg = false,		/* permit non-unique user ID to be specified with -u */
+    qflg = false,		/* quiet, skip existing user */
     rflg = false,		/* create a system account */
     sflg = false,		/* shell program for new account */
     subvolflg = false,		/* create subvolume home on BTRFS */
@@ -847,6 +848,7 @@
 	(void) fputs (_("  -o, --non-unique              allow to create users with duplicate\n"
 	                "                                (non-unique) UID\n"), usageout);
 	(void) fputs (_("  -p, --password PASSWORD       encrypted password of the new account\n"), usageout);
+	(void) fputs (_("  -q, --quiet                   succeed quietly if user+uid already exists\n"), usageout);
 	(void) fputs (_("  -r, --system                  create a system account\n"), usageout);
 	(void) fputs (_("  -R, --root CHROOT_DIR         directory to chroot into\n"), usageout);
 	(void) fputs (_("  -P, --prefix PREFIX_DIR       prefix directory where are located the /etc/* files\n"), usageout);
@@ -1125,6 +1127,7 @@
 			{"no-user-group",  no_argument,       NULL, 'N'},
 			{"non-unique",     no_argument,       NULL, 'o'},
 			{"password",       required_argument, NULL, 'p'},
+			{"quiet",    	   no_argument,       NULL, 'q'},
 			{"system",         no_argument,       NULL, 'r'},
 			{"root",           required_argument, NULL, 'R'},
 			{"prefix",         required_argument, NULL, 'P'},
@@ -1138,9 +1141,9 @@
 		};
 		while ((c = getopt_long (argc, argv,
 #ifdef WITH_SELINUX
-		                         "b:c:d:De:f:g:G:hk:K:lmMNop:rR:P:s:u:UZ:",
+		                         "b:c:d:De:f:g:G:hk:K:lmMNop:qrR:P:s:u:UZ:",
 #else				/* !WITH_SELINUX */
-		                         "b:c:d:De:f:g:G:hk:K:lmMNop:rR:P:s:u:U",
+		                         "b:c:d:De:f:g:G:hk:K:lmMNop:qrR:P:s:u:U",
 #endif				/* !WITH_SELINUX */
 		                         long_options, NULL)) != -1) {
 			switch (c) {
@@ -1309,6 +1312,9 @@
 				}
 				user_pass = optarg;
 				break;
+			case 'q':
+				qflg = true;
+				break;
 			case 'r':
 				rflg = true;
 				break;
@@ -2187,7 +2193,7 @@
 		else
 			sprintf (file, "%s/%s", spool, user_name);
 		fd = open (file, O_CREAT | O_WRONLY | O_TRUNC | O_EXCL, 0);
-		if (fd < 0) {
+		if (!qflg && (fd < 0)) {
 			perror (_("Creating mailbox file"));
 			return;
 		}
@@ -2195,8 +2201,8 @@
 		gid = user_gid;
 		mode = 0600;
 
-		if (   (fchown (fd, user_id, gid) != 0)
-		    || (fchmod (fd, mode) != 0)) {
+		if (!qflg && ((fchown (fd, user_id, gid) != 0)
+		    || (fchmod (fd, mode) != 0))) {
 			perror (_("Setting mailbox file permissions"));
 		}
 
@@ -2319,6 +2325,9 @@
 	 * Start with a quick check to see if the user exists.
 	 */
 	if (prefix_getpwnam (user_name) != NULL) { /* local, no need for xgetpwnam */
+		if (qflg) {
+			exit (E_SUCCESS);
+		}
 		fprintf (stderr, _("%s: user '%s' already exists\n"), Prog, user_name);
 #ifdef WITH_AUDIT
 		audit_logger (AUDIT_ADD_USER, Prog,
@@ -2338,6 +2347,9 @@
 	if (Uflg) {
 		/* local, no need for xgetgrnam */
 		if (prefix_getgrnam (user_name) != NULL) {
+			if (qflg) {
+				exit (E_SUCCESS);
+			}
 			fprintf (stderr,
 			         _("%s: group %s exists - if you want to add this user to that group, use -g.\n"),
 			         Prog, user_name);
@@ -2438,12 +2450,13 @@
 			copy_tree (def_template, prefix_user_home, false, false,
 			           (uid_t)-1, user_id, (gid_t)-1, user_gid);
 		} else {
-			fprintf (stderr,
-			         _("%s: warning: the home directory already exists.\n"
-			           "Not copying any file from skel directory into it.\n"),
-			         Prog);
+			if (!qflg) {
+				fprintf (stderr,
+				         _("%s: warning: the home directory already exists.\n"
+				           "Not copying any file from skel directory into it.\n"),
+				         Prog);
+			}
 		}
-
 	}
 
 	/* Do not create mail directory for system accounts */
diff -Naur orig/src/userdel.c patched/src/userdel.c
--- orig/src/userdel.c	2019-05-04 07:38:23.000000000 +0200
+++ patched/src/userdel.c	2019-08-05 00:47:52.466011908 +0200
@@ -1030,6 +1030,7 @@
 		static struct option long_options[] = {
 			{"force",        no_argument,       NULL, 'f'},
 			{"help",         no_argument,       NULL, 'h'},
+			{"quiet",        no_argument, 		NULL, 'q'},
 			{"remove",       no_argument,       NULL, 'r'},
 			{"root",         required_argument, NULL, 'R'},
 			{"prefix",       required_argument, NULL, 'P'},
@@ -1039,10 +1040,10 @@
 			{NULL, 0, NULL, '\0'}
 		};
 		while ((c = getopt_long (argc, argv,
-#ifdef WITH_SELINUX             
-		                         "fhrR:P:Z",
+#ifdef WITH_SELINUX
+		                         "fhqrR:P:Z",
 #else				/* !WITH_SELINUX */
-		                         "fhrR:P:",
+		                         "fhqrR:P:",
 #endif				/* !WITH_SELINUX */
 		                         long_options, NULL)) != -1) {
 			switch (c) {
@@ -1052,6 +1053,9 @@
 			case 'h':
 				usage (E_SUCCESS);
 				break;
+			case 'q':  /* set 'force' flag for backward compatibility with old UHU patch */
+				fflg = true;
+				break;
 			case 'r':	/* remove home dir and mailbox */
 				rflg = true;
 				break;
