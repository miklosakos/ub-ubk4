diff -Naur sk1-2.0rc2.orig/src/uc2/libimg/_libimg.c sk1-2.0rc2/src/uc2/libimg/_libimg.c
--- sk1-2.0rc2.orig/src/uc2/libimg/_libimg.c	2016-10-09 12:40:45.000000000 +0200
+++ sk1-2.0rc2/src/uc2/libimg/_libimg.c	2018-01-29 11:47:58.377663808 +0100
@@ -17,7 +17,7 @@
  */
 
 #include <Python.h>
-#include <wand/MagickWand.h>
+#include <MagickWand/MagickWand.h>
 
 static PyObject *
 im_InitMagick(PyObject *self, PyObject *args) {
@@ -199,15 +199,15 @@
 //	  UndefinedType,
 //	  BilevelType,
 //	  GrayscaleType,
-//	  GrayscaleMatteType,
+//	  GrayscaleAlphaType,
 //	  PaletteType,
-//	  PaletteMatteType,
+//	  PaletteAlphaType,
 //	  TrueColorType,
-//	  TrueColorMatteType,
+//	  TrueColorAlphaType,
 //	  ColorSeparationType,
-//	  ColorSeparationMatteType,
+//	  ColorSeparationAlphaType,
 //	  OptimizeType,
-//	  PaletteBilevelMatteType
+//	  PaletteBilevelAlphaType
 
 static PyObject *
 im_GetImageType(PyObject *self, PyObject *args) {
@@ -230,32 +230,32 @@
 	else if (img_type == GrayscaleType){
 		return Py_BuildValue("s", "GrayscaleType");
 	}
-	else if (img_type == GrayscaleMatteType){
-		return Py_BuildValue("s", "GrayscaleMatteType");
+	else if (img_type == GrayscaleAlphaType){
+		return Py_BuildValue("s", "GrayscaleAlphaType");
 	}
 	else if (img_type == PaletteType){
 		return Py_BuildValue("s", "PaletteType");
 	}
-	else if (img_type == PaletteMatteType){
-		return Py_BuildValue("s", "PaletteMatteType");
+	else if (img_type == PaletteAlphaType){
+		return Py_BuildValue("s", "PaletteAlphaType");
 	}
 	else if (img_type == TrueColorType){
 		return Py_BuildValue("s", "TrueColorType");
 	}
-	else if (img_type == TrueColorMatteType){
-		return Py_BuildValue("s", "TrueColorMatteType");
+	else if (img_type == TrueColorAlphaType){
+		return Py_BuildValue("s", "TrueColorAlphaType");
 	}
 	else if (img_type == ColorSeparationType){
 		return Py_BuildValue("s", "ColorSeparationType");
 	}
-	else if (img_type == ColorSeparationMatteType){
-		return Py_BuildValue("s", "ColorSeparationMatteType");
+	else if (img_type == ColorSeparationAlphaType){
+		return Py_BuildValue("s", "ColorSeparationAlphaType");
 	}
 	else if (img_type == OptimizeType){
 		return Py_BuildValue("s", "OptimizeType");
 	}
-	else if (img_type == PaletteBilevelMatteType){
-		return Py_BuildValue("s", "PaletteBilevelMatteType");
+	else if (img_type == PaletteBilevelAlphaType){
+		return Py_BuildValue("s", "PaletteBilevelAlphaType");
 	}
 	else {
 		return Py_BuildValue("s", "UndefinedType");
@@ -281,9 +281,7 @@
 //HSBColorspace,
 //HSLColorspace,
 //HWBColorspace,
-//Rec601LumaColorspace,
 //Rec601YCbCrColorspace,
-//Rec709LumaColorspace,
 //Rec709YCbCrColorspace,
 //LogColorspace,
 //CMYColorspace
@@ -351,15 +349,9 @@
 	else if (cs == HWBColorspace){
 		return Py_BuildValue("s", "HWBColorspace");
 	}
-	else if (cs == Rec601LumaColorspace){
-		return Py_BuildValue("s", "Rec601LumaColorspace");
-	}
 	else if (cs == Rec601YCbCrColorspace){
 		return Py_BuildValue("s", "Rec601YCbCrColorspace");
 	}
-	else if (cs == Rec709LumaColorspace){
-		return Py_BuildValue("s", "Rec709LumaColorspace");
-	}
 	else if (cs == Rec709YCbCrColorspace){
 		return Py_BuildValue("s", "Rec709YCbCrColorspace");
 	}
@@ -425,26 +417,26 @@
   else if (strcmp(mode, "GrayscaleType") == 0) {
     return GrayscaleType;
   }
-  else if (strcmp(mode, "GrayscaleMatteType") == 0) {
-    return GrayscaleMatteType;
+  else if (strcmp(mode, "GrayscaleAlphaType") == 0) {
+    return GrayscaleAlphaType;
   }
   else if (strcmp(mode, "PaletteType") == 0) {
     return PaletteType;
   }
-  else if (strcmp(mode, "PaletteMatteType") == 0) {
-    return PaletteMatteType;
+  else if (strcmp(mode, "PaletteAlphaType") == 0) {
+    return PaletteAlphaType;
   }
   else if (strcmp(mode, "TrueColorType") == 0) {
     return TrueColorType;
   }
-  else if (strcmp(mode, "TrueColorMatteType") == 0) {
-    return TrueColorMatteType;
+  else if (strcmp(mode, "TrueColorAlphaType") == 0) {
+    return TrueColorAlphaType;
   }
   else if (strcmp(mode, "ColorSeparationType") == 0) {
     return ColorSeparationType;
   }
-  else if (strcmp(mode, "ColorSeparationMatteType") == 0) {
-    return ColorSeparationMatteType;
+  else if (strcmp(mode, "ColorSeparationAlphaType") == 0) {
+    return ColorSeparationAlphaType;
   }
   else {
     return TrueColorType;
diff -Naur sk1-2.0rc2.orig/src/uc2/libimg/magickwand.py sk1-2.0rc2/src/uc2/libimg/magickwand.py
--- sk1-2.0rc2.orig/src/uc2/libimg/magickwand.py	2016-10-09 12:40:45.000000000 +0200
+++ sk1-2.0rc2/src/uc2/libimg/magickwand.py	2018-01-29 11:47:05.929701428 +0100
@@ -19,13 +19,13 @@
 
 BILEVEL_TYPE = 'BilevelType'
 L_TYPE = 'GrayscaleType'
-LA_TYPE = 'GrayscaleMatteType'
+LA_TYPE = 'GrayscaleAlphaType'
 P_TYPE = 'PaletteType'
-PA_TYPE = 'PaletteMatteType'
+PA_TYPE = 'PaletteAlphaType'
 RGB_TYPE = 'TrueColorType'
-RGBA_TYPE = 'TrueColorMatteType'
+RGBA_TYPE = 'TrueColorAlphaType'
 CMYK_TYPE = 'ColorSeparationType'
-CMYKA_TYPE = 'ColorSeparationMatteType'
+CMYKA_TYPE = 'ColorSeparationAlphaType'
 
 WAND_TYPES = [BILEVEL_TYPE, L_TYPE, LA_TYPE, P_TYPE, PA_TYPE,
 			RGB_TYPE, RGBA_TYPE, CMYK_TYPE, CMYKA_TYPE, ]
