diff -Naur orig/source/paged-geom/BatchedGeometry.cpp patched/source/paged-geom/BatchedGeometry.cpp
--- orig/source/paged-geom/BatchedGeometry.cpp	2019-03-16 15:58:09.000000000 +0100
+++ patched/source/paged-geom/BatchedGeometry.cpp	2020-09-11 21:48:48.203340446 +0200
@@ -200,7 +200,7 @@
          break;
 
       default:
-         throw new Ogre::Exception(0, "Unknown index buffer type", "Converter.cpp::CountVertices");
+         throw new Ogre::Exception(Exception::ERR_INVALIDPARAMS, "Unknown index buffer type", "Converter.cpp::CountVertices");
          break;
    }
 
@@ -545,7 +545,7 @@
       case VET_COLOUR_ABGR:
          break;
       default:
-         OGRE_EXCEPT(0, "Unknown RenderSystem color format", "BatchedGeometry::SubBatch::addSubMesh()");
+         OGRE_EXCEPT(Exception::ERR_INVALIDPARAMS, "Unknown RenderSystem color format", "BatchedGeometry::SubBatch::addSubMesh()");
          break;
       }
    }
diff -Naur orig/source/paged-geom/PagedGeometry.cpp patched/source/paged-geom/PagedGeometry.cpp
--- orig/source/paged-geom/PagedGeometry.cpp	2019-03-16 15:58:09.000000000 +0100
+++ patched/source/paged-geom/PagedGeometry.cpp	2020-09-11 21:50:28.189600620 +0200
@@ -164,7 +164,7 @@
 void PagedGeometry::setPageSize(Real size)
 {
 	if (!managerList.empty())
-		OGRE_EXCEPT(0, "PagedGeometry::setPageSize() cannot be called after detail levels have been added. Call removeDetailLevels() first.", "PagedGeometry::setPageSize()");
+		OGRE_EXCEPT(Exception::ERR_INVALIDPARAMS, "PagedGeometry::setPageSize() cannot be called after detail levels have been added. Call removeDetailLevels() first.", "PagedGeometry::setPageSize()");
 
 	pageSize = size;
 }
@@ -172,7 +172,7 @@
 void PagedGeometry::setInfinite()
 {
 	if (!managerList.empty())
-		OGRE_EXCEPT(0, "PagedGeometry::setInfinite() cannot be called after detail levels have been added. Call removeDetailLevels() first.", "PagedGeometry::setInfinite()");
+		OGRE_EXCEPT(Exception::ERR_INVALIDPARAMS, "PagedGeometry::setInfinite() cannot be called after detail levels have been added. Call removeDetailLevels() first.", "PagedGeometry::setInfinite()");
 
 	m_bounds = TBounds(0, 0, 0, 0);
 }
@@ -180,7 +180,7 @@
 void PagedGeometry::setBounds(TBounds bounds)
 {
 	if (!managerList.empty())
-		OGRE_EXCEPT(0, "PagedGeometry::setBounds() cannot be called after detail levels have been added. Call removeDetailLevels() first.", "PagedGeometry::setBounds()");
+		OGRE_EXCEPT(Exception::ERR_INVALIDPARAMS, "PagedGeometry::setBounds() cannot be called after detail levels have been added. Call removeDetailLevels() first.", "PagedGeometry::setBounds()");
 	if (!Math::RealEqual(bounds.width(), bounds.height(), 0.01f))
 		OGRE_EXCEPT(Exception::ERR_INVALIDPARAMS, "Bounds must be square", "PagedGeometry::setBounds()");
 	if (bounds.width() <= 0 || bounds.height() <=0)
@@ -364,7 +364,7 @@
 
 	//Error check
 	if (maxRange <= minRange){
-		OGRE_EXCEPT(1, "Closer detail levels must be added before farther ones", "PagedGeometry::addDetailLevel()");
+		OGRE_EXCEPT(Exception::ERR_INVALIDPARAMS, "Closer detail levels must be added before farther ones", "PagedGeometry::addDetailLevel()");
 	}
 
 	//Setup the new manager
diff -Naur orig/source/paged-geom/PropertyMaps.cpp patched/source/paged-geom/PropertyMaps.cpp
--- orig/source/paged-geom/PropertyMaps.cpp	2019-03-16 15:58:09.000000000 +0100
+++ patched/source/paged-geom/PropertyMaps.cpp	2020-09-11 21:50:56.157121788 +0200
@@ -112,7 +112,7 @@
 			case CHANNEL_GREEN: channelOffset = 2; break;
 			case CHANNEL_BLUE: channelOffset = 1; break;
 			case CHANNEL_ALPHA: channelOffset = 0; break;
-			default: OGRE_EXCEPT(0, "Invalid channel", "GrassLayer::setDensityMap()"); break;
+			default: OGRE_EXCEPT(Exception::ERR_INVALIDPARAMS, "Invalid channel", "GrassLayer::setDensityMap()"); break;
 		}
 
 		//And copy that channel into the density map
@@ -164,7 +164,7 @@
 				case CHANNEL_BLUE: colval = col.b; break;
 				case CHANNEL_ALPHA: colval = col.a; break;
 				case CHANNEL_COLOR: colval = col.r; break;
-				default: OGRE_EXCEPT(0, "Invalid channel", "GrassLayer::setDensityMap()"); break;
+				default: OGRE_EXCEPT(Exception::ERR_INVALIDPARAMS, "Invalid channel", "GrassLayer::setDensityMap()"); break;
 			}
 			outputPtr[j*width+i] = colval * 255.0f;
 
@@ -321,7 +321,7 @@
 				channel = CHANNEL_RED;
 			break;
 		default:
-			OGRE_EXCEPT(0, "Unknown RenderSystem color format", "GrassLayer::setColorMap()");
+			OGRE_EXCEPT(Exception::ERR_INVALIDPARAMS, "Unknown RenderSystem color format", "GrassLayer::setColorMap()");
 			break;
 	}
 
@@ -344,7 +344,7 @@
 			case CHANNEL_GREEN: channelOffset = 2; break;
 			case CHANNEL_BLUE: channelOffset = 1; break;
 			case CHANNEL_ALPHA: channelOffset = 0; break;
-			default: OGRE_EXCEPT(0, "Invalid channel", "ColorMap::ColorMap()"); break;
+			default: OGRE_EXCEPT(Exception::ERR_INVALIDPARAMS, "Invalid channel", "ColorMap::ColorMap()"); break;
 		}
 
 		//And copy that channel into the density map
diff -Naur orig/source/paged-geom/TreeLoader2D.cpp patched/source/paged-geom/TreeLoader2D.cpp
--- orig/source/paged-geom/TreeLoader2D.cpp	2019-03-16 15:58:09.000000000 +0100
+++ patched/source/paged-geom/TreeLoader2D.cpp	2020-09-11 21:51:34.314986894 +0200
@@ -542,7 +542,7 @@
 {
 	//Out of bounds check
 	if (!hasMore)
-		OGRE_EXCEPT(1, "Cannot read past end of TreeIterator list", "TreeIterator::moveNext()");
+		OGRE_EXCEPT(Exception::ERR_INVALIDPARAMS, "Cannot read past end of TreeIterator list", "TreeIterator::moveNext()");
 
 	//Preserve the last tree
 	prevTreeDat = currentTreeDat;
diff -Naur orig/source/paged-geom/TreeLoader3D.cpp patched/source/paged-geom/TreeLoader3D.cpp
--- orig/source/paged-geom/TreeLoader3D.cpp	2019-03-16 15:58:09.000000000 +0100
+++ patched/source/paged-geom/TreeLoader3D.cpp	2020-09-11 21:51:32.047336378 +0200
@@ -529,7 +529,7 @@
 {
 	//Out of bounds check
 	if (!hasMore)
-		OGRE_EXCEPT(1, "Cannot read past end of TreeIterator list", "TreeIterator::moveNext()");
+		OGRE_EXCEPT(Exception::ERR_INVALIDPARAMS, "Cannot read past end of TreeIterator list", "TreeIterator::moveNext()");
 
 	//Preserve the last tree
 	prevTreeDat = currentTreeDat;
diff -Naur orig/source/sound/SoundMgr.cpp patched/source/sound/SoundMgr.cpp
--- orig/source/sound/SoundMgr.cpp	2019-03-16 15:58:09.000000000 +0100
+++ patched/source/sound/SoundMgr.cpp	2020-09-11 21:45:12.594495645 +0200
@@ -4,6 +4,7 @@
 #include "SoundBase.h"
 #include "SoundBaseMgr.h"
 #include <OgreDataStream.h>
+#include <OgreException.h>
 using namespace Ogre;
 
 
