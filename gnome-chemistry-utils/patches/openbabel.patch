diff -Naur orig/configure patched/configure
--- orig/configure	2017-02-12 10:11:04.000000000 +0100
+++ patched/configure	2020-10-01 11:30:20.044556373 +0200
@@ -19695,12 +19695,12 @@
     pkg_cv_openbabel_CFLAGS="$openbabel_CFLAGS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"openbabel-2.0 >= 2.3.0\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "openbabel-2.0 >= 2.3.0") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"openbabel-3 >= 3.0.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "openbabel-3 >= 3.0.0") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_openbabel_CFLAGS=`$PKG_CONFIG --cflags "openbabel-2.0 >= 2.3.0" 2>/dev/null`
+  pkg_cv_openbabel_CFLAGS=`$PKG_CONFIG --cflags "openbabel-3 >= 3.0.0" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -19712,12 +19712,12 @@
     pkg_cv_openbabel_LIBS="$openbabel_LIBS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"openbabel-2.0 >= 2.3.0\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "openbabel-2.0 >= 2.3.0") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"openbabel-3 >= 3.0.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "openbabel-3 >= 3.0.0") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_openbabel_LIBS=`$PKG_CONFIG --libs "openbabel-2.0 >= 2.3.0" 2>/dev/null`
+  pkg_cv_openbabel_LIBS=`$PKG_CONFIG --libs "openbabel-3 >= 3.0.0" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -19738,14 +19738,14 @@
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        openbabel_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "openbabel-2.0 >= 2.3.0" 2>&1`
+	        openbabel_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "openbabel-3 >= 3.0.0" 2>&1`
         else
-	        openbabel_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "openbabel-2.0 >= 2.3.0" 2>&1`
+	        openbabel_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "openbabel-3 >= 3.0.0" 2>&1`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$openbabel_PKG_ERRORS" >&5
 
-	as_fn_error $? "Package requirements (openbabel-2.0 >= 2.3.0) were not met:
+	as_fn_error $? "Package requirements (openbabel-3 >= 3.0.0) were not met:
 
 $openbabel_PKG_ERRORS
 
diff -Naur orig/configure.ac patched/configure.ac
--- orig/configure.ac	2017-02-12 10:10:15.000000000 +0100
+++ patched/configure.ac	2020-10-01 11:30:28.672579589 +0200
@@ -193,7 +193,7 @@
 PKG_CHECK_MODULES(goffice, [$libgoffice >= 0.10.12])
 PKG_CHECK_MODULES(chemical_mime_data, [chemical-mime-data >= 0.1.94])
 PKG_CHECK_MODULES(bodr, [bodr >= 5])
-PKG_CHECK_MODULES(openbabel, [openbabel-2.0 >= 2.3.0])
+PKG_CHECK_MODULES(openbabel, [openbabel-3 >= 3.0.0])
 PKG_CHECK_MODULES(x11, [x11 >= 1.0.0])
 
 dnl Not sure we need to test for glu.h and glx.h
