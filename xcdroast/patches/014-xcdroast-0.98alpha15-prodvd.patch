diff -up xcdroast-0.98alpha16/src/create.c.cdrkit xcdroast-0.98alpha16/src/create.c
--- xcdroast-0.98alpha16/src/create.c.cdrkit	2009-02-17 06:34:16.000000000 -0500
+++ xcdroast-0.98alpha16/src/create.c	2009-02-17 06:34:16.000000000 -0500
@@ -523,7 +523,7 @@ GtkWidget *scrolled_win, *list;
         gtk_widget_show(tbl);
         vbox = gtk_vbox_new(FALSE,10);
         gtk_table_attach_defaults(GTK_TABLE(tbl),vbox,1,2,0,1);
-	if (!curset.isProDVD) {
+	if (!curset.isDVD) {
         	f1 = gtk_frame_new(_("CD-Information"));
 	} else {
         	f1 = gtk_frame_new(_("CD/DVD-Information"));
@@ -1260,7 +1260,7 @@ GtkWidget *scrolled_win, *img_list;
         gtk_widget_show(tbl);
         vbox = gtk_vbox_new(FALSE,10);
         gtk_table_attach_defaults(GTK_TABLE(tbl),vbox,0,1,0,1);
-	if (!curset.isProDVD) {
+	if (!curset.isDVD) {
         	f1 = gtk_frame_new(_("CD-Information"));
 	} else {
         	f1 = gtk_frame_new(_("CD/DVD-Information"));
@@ -2979,7 +2979,7 @@ GtkTargetEntry target_entry[3];
                 GTK_SIGNAL_FUNC(fixate_clicked), NULL);
         define_tooltip(b1,_("Just fixate (close) the CD, if for some reason the CD has been written but not fixated."));
 
-	if (!curset.isProDVD) {
+	if (!curset.isDVD) {
         	b1 = gtk_button_new_with_label(_("Blank CD-RW"));
 	} else {
         	b1 = gtk_button_new_with_label(_("Blank CD/DVD+-RW"));
@@ -3086,7 +3086,7 @@ GtkTargetEntry target_entry[3];
                 gtk_widget_show (menu_item);
                 i++;
         }
-        if (curset.isProDVD) {
+        if (curset.isDVD) {
                 i = 0;
                 tmpval = curset.cdrtype;
                 while (dvdtypes[i] != 0) {
@@ -5774,7 +5774,7 @@ GtkObject *adj;
 	bootable_frame1 = NULL;
 	bootable_frame2 = NULL;
 
-	if (!curset.isProDVD) {
+	if (!curset.isDVD) {
 		f1 = gtk_frame_new(_("Options to create a bootable CD"));
 	} else {
 		f1 = gtk_frame_new(_("Options to create a bootable CD/DVD"));
@@ -5794,7 +5794,7 @@ GtkObject *adj;
 	gtk_box_pack_start(GTK_BOX(vbox),tbl,FALSE,FALSE,0);
         gtk_widget_show(tbl);
 
-	if (!curset.isProDVD) {
+	if (!curset.isDVD) {
         	l1 = rightjust_gtk_label_new(_("Make CD bootable?"));
 	} else {
         	l1 = rightjust_gtk_label_new(_("Make CD/DVD bootable?"));
@@ -7023,7 +7023,7 @@ gchar tmp2[MAXLINE];
                 gtk_widget_show (menu_item);
                 i++;
         }
-        if (curset.isProDVD) {
+        if (curset.isDVD) {
                 i = 0;
                 tmpval = curset.cdrtype;
                 while (dvdtypes[i] != 0) {
@@ -7174,7 +7174,7 @@ gchar tmp2[MAXLINE];
         gtk_widget_show(b1);
         define_tooltip(b1,_("Set additional write options for advanced users."));
 	/* blank button */
-	if (!curset.isProDVD) {
+	if (!curset.isDVD) {
         	b1 = gtk_button_new_with_label(_("Blank CD-RW"));
 	} else {
         	b1 = gtk_button_new_with_label(_("Blank CD/DVD+-RW"));
diff -up xcdroast-0.98alpha16/src/init.c.cdrkit xcdroast-0.98alpha16/src/init.c
--- xcdroast-0.98alpha16/src/init.c.cdrkit	2009-02-17 06:34:16.000000000 -0500
+++ xcdroast-0.98alpha16/src/init.c	2009-02-17 06:34:16.000000000 -0500
@@ -156,7 +156,7 @@ static void init_curset() {
 gint cdrtypes[] = CDR_TYPES_MIN;
 gint i;
 
-	curset.isProDVD = 0;
+	curset.isDVD = 0;
 	curset.support_ontheflyaudio = 0;
 	curset.writer_devnr = -1;
 	curset.reader_devnr = -1;
@@ -1005,7 +1005,7 @@ gint isProDVD, ignoreProDVD;
 	tocfiles = (GList *) NULL;
 	strcpy(xcdroast_version_loaded, "");
 
-	curset.isProDVD = isProDVD;
+	curset.isDVD = isProDVD;
 	curset.support_ontheflyaudio = support_ontheflyaudio;
 
 	/* load iso-options if available */
@@ -1129,7 +1129,7 @@ gint isProDVD, ignoreProDVD;
 	}
 #endif
 
-	if (curset.isProDVD == 1) {
+	if (curset.isDVD == 1) {
 		/* set key if we got one from the config-file */
 		if (strcmp(setupdata.ProDVDkey,"")) {
 
diff -up xcdroast-0.98alpha16/src/io.c.cdrkit xcdroast-0.98alpha16/src/io.c
--- xcdroast-0.98alpha16/src/io.c.cdrkit	2009-02-17 06:34:16.000000000 -0500
+++ xcdroast-0.98alpha16/src/io.c	2009-02-17 08:39:07.000000000 -0500
@@ -4725,7 +4725,7 @@ gint fd;
 	dolog(3, "Saving extended output to %s\n", fname);
 
 	/* write to file */
-	fd = open(fname,O_WRONLY | O_CREAT);
+	fd = open(fname,O_WRONLY | O_CREAT, 0600);
 	if (fd < 0) {
 		g_warning("Can't open file %s for writing\n",fname);
 		return 1;
@@ -5989,7 +5989,7 @@ gchar tmp[MAXLINE];
 		if (WIFSIGNALED(ret) && read_done == 0) {
 
 			/* most likely invalid prodvd key */
-			if (curset.isProDVD) {
+			if (curset.isDVD) {
 				strncpy(tmp, "\nReceived ALARM from cdrecord-ProDVD. Aborting blank...\nInvalid ProDVD key?\n", MAXLINE);
 
 				convert_for_gtk2_textwidget(tmp);
@@ -6372,7 +6372,7 @@ gint cdrecord_stderr;
 		if (WIFSIGNALED(ret) && read_done == 0) {
 
 			/* most likely invalid prodvd key */
-			if (curset.isProDVD && curset.cdrtype > 1000) {
+			if (curset.isDVD && curset.cdrtype > 1000) {
 				read_done = 2;
 			}
 		}
@@ -6402,7 +6402,7 @@ gint cdrecord_stderr;
 	}
 
 	/* prodvd and beginning to write soon? */
-	if (curset.isProDVD && curset.cdrtype > 1000) {
+	if (curset.isDVD && curset.cdrtype > 1000) {
 		if (strstr(line,"Last chance to quit")) {
 			cdrtimer = gtk_timeout_add(1000, 
 					cdrtimer_callback, NULL);
@@ -6711,7 +6711,7 @@ gchar *p;
 
 static void display_invalid_prodvdkey() {
 
-	if (curset.isProDVD && curset.cdrtype > 1000) {
+	if (curset.isDVD && curset.cdrtype > 1000) {
 		show_dialog(ICO_WARN, _("cdrecord-ProDVD terminated.\n\nMost likely because you have entered\nan invalid key. Please check if it is correct."), T_OK, NULL, NULL, 0);
 	}
 }
@@ -9900,17 +9900,17 @@ gint wrmode;
 /* check the version of cdrecord */
 /* return 1 if not correct (to old) */
 
-gint check_version_cdrecord(gchar *match, gchar *found, gint *isProDVD) {
+gint check_version_cdrecord(gchar *match, gchar *found, gint *isDVD) {
 gchar line[MAXLINE];
 gchar vline[MAXLINE];
 gchar ver[MAXLINE];
 FILE *fpin;
 gchar *p;
 
-	*isProDVD = 0;
+	*isDVD = 0;
 	strcpy(ver,"");
 	get_wrap_path("CDRECORD",line);
-	strcat(line," -version 2>/dev/null");
+	strcat(line," -version 2>&1");
 
 	dodebug(1, "calling: %s\n", line);
         if ((fpin = popen(line,"r")) == NULL) {
@@ -9930,7 +9930,7 @@ gchar *p;
 		}
 		if (strstr(line, "This version is an unofficial (modified) version with DVD support")) {
 			dodebug(1, "WARNING: Inoffical cdrecord version found!\n", line);
-			*isProDVD = 1;
+			*isDVD = 1;
 		}
         }
 
@@ -9955,7 +9955,7 @@ gchar *p;
 	} else {
 		p = strstr(vline, "ProDVD");
 		if (p != NULL) {
-			*isProDVD = 1;
+			*isDVD = 1;
 			p = strtok(p, " ");
 			if (p != NULL) {
 			  p = strtok(NULL, " ");
@@ -10005,6 +10005,7 @@ gchar *p;
 
 gint check_version_mkisofs(gchar *match, gchar *found) {
 gchar line[MAXLINE];
+gchar vline[MAXLINE];
 gchar ver[MAXLINE];
 FILE *fpin;
 gchar *p;
@@ -10019,17 +10020,22 @@ gchar *p;
         }
 
 	strcpy(line,"");
+	strcpy(vline,"");
         for (;;) {
                 if (fgets(line,MAXLINE,fpin) == NULL) 
                         break;
 		dodebug(10,"got: %s",line);
+		/* only get first line */
+		if (strcmp(vline,"") == 0) {
+			strncpy(vline, line, MAXLINE);
+		}
         }
 
         if (pclose(fpin) == -1) {
                 g_error("pclose error\n");
         }
 
-	if (strcmp(line,"") == 0 || strstr(line,"sh:") != NULL) {
+	if (strcmp(vline,"") == 0 || strstr(vline,"sh:") != NULL) {
 		/* failed to open - permission denied */
 		return 2;
 	}
@@ -10038,9 +10044,9 @@ gchar *p;
 	/* now line contains the version string of mkisofs */
 	/* try to extract the version number */
 
-	p = strstr(line,"mkisofs");
+	p = strstr(line,"genisoimage");
 	if (p != NULL) {
-		p = strtok(p+8, " ");
+		p = strtok(p+11, " ");
 		if (p != NULL) {
 			strcpy(ver,p);
 		}
@@ -10070,7 +10076,7 @@ gchar line[MAXLINE];
 gchar ver[MAXLINE];
 FILE *fpin;
 gchar *p;
-
+ int icedax=0;
 	strcpy(ver,"");
 	get_wrap_path("CDDA2WAV",line);
 	strcat(line," -version 2>&1");
@@ -10085,6 +10091,9 @@ gchar *p;
                 if (fgets(line,MAXLINE,fpin) == NULL) 
                         break;
 		dodebug(10,"got: %s",line);
+		if (strstr(line, "icedax") != NULL) {
+		  icedax=1;
+		}	
         }
 
         if (pclose(fpin) == -1) {
@@ -10096,6 +10105,11 @@ gchar *p;
 		return 2;
 	}
 
+	if (icedax) {
+	  strcpy(found, CDDA2WAV_VERSION);
+	  return 0;
+	}	
+
 	/* now line contains the version string of cdda2wav */
 	/* try to extract the version number */
 
@@ -10137,13 +10151,14 @@ gchar *p;
 
 gint check_version_readcd(gchar *match, gchar *found) {
 gchar line[MAXLINE];
+gchar vline[MAXLINE];
 gchar ver[MAXLINE];
 FILE *fpin;
 gchar *p;
 
 	strcpy(ver,"");
 	get_wrap_path("READCD",line);
-	strcat(line," -version 2>/dev/null");
+	strcat(line," -version 2>/dev/null | fgrep " READCD_NAME);
 
 	dodebug(1, "calling: %s\n", line);
         if ((fpin = popen(line,"r")) == NULL) {
@@ -10155,17 +10170,22 @@ gchar *p;
 	
 #if 0
 	strcpy(line,"");
+	strcpy(vline,"");
         for (;;) {
                 if (fgets(line,MAXLINE,fpin) == NULL) 
                         break;
 		dodebug(10,"got: %s",line);
+		/* only get first line */
+		if (strcmp(vline,"") == 0) {
+			strncpy(vline, line, MAXLINE);
+		}
         }
 
         if (pclose(fpin) == -1) {
                 g_error("pclose error\n");
         }
 
-	if (strcmp(line,"") == 0 || strstr(line,"sh:") != NULL) {
+	if (strcmp(vline,"") == 0 || strstr(vline,"sh:") != NULL) {
 		/* failed to open - permission denied */
 		return 2;
 	}
diff -up xcdroast-0.98alpha16/src/main.c.cdrkit xcdroast-0.98alpha16/src/main.c
--- xcdroast-0.98alpha16/src/main.c.cdrkit	2009-02-17 06:34:16.000000000 -0500
+++ xcdroast-0.98alpha16/src/main.c	2009-02-17 06:34:16.000000000 -0500
@@ -226,7 +226,7 @@ gchar tmp[MAXLINE];
 	gtk_box_pack_start(GTK_BOX(sidespace), side_t,TRUE,TRUE,0);
 
 	side_t_btn1 = gtk_button_new_with_label (_("Setup"));
-	if (!curset.isProDVD) {
+	if (!curset.isDVD) {
 		side_t_btn2 = gtk_button_new_with_label (_("Duplicate CD"));
 		side_t_btn3 = gtk_button_new_with_label (_("Create CD"));
 	} else {
diff -up xcdroast-0.98alpha16/src/setup.c.cdrkit xcdroast-0.98alpha16/src/setup.c
--- xcdroast-0.98alpha16/src/setup.c.cdrkit	2009-02-17 06:34:16.000000000 -0500
+++ xcdroast-0.98alpha16/src/setup.c	2009-02-17 06:34:16.000000000 -0500
@@ -316,7 +316,7 @@ gchar tmp[MAXLINE];
 	dolog(2, "Confirm setup\n");
 
 	/* some lasts checks and warnings */
-	if (is_dvdwriter(setupdata.writer_devnr) && !curset.isProDVD) {
+	if (is_dvdwriter(setupdata.writer_devnr) && !curset.isDVD) {
 		ret = show_dialog(ICO_WARN, _("Please note that you have to install ProDVD support before\nyou can write DVDs. Currently you will only be able to\nwrite regular CDs with your DVD-Writer."), T_OK,T_CANCEL, NULL, 0);
 		if (ret == 1) {
 			/* abort */
@@ -1148,7 +1148,7 @@ static const gchar *helpwritemodes[] = H
 	gtk_box_pack_start(GTK_BOX(vbox2),tbl,FALSE,TRUE,0);
 	gtk_widget_show(tbl);
 
-	if (!curset.isProDVD) {
+	if (!curset.isDVD) {
 		l1 = rightjust_gtk_label_new(_("CD Writer Device:"));
 	} else {
 		l1 = rightjust_gtk_label_new(_("CD/DVD Writer Device:"));
@@ -2788,7 +2788,7 @@ GtkWidget *check;
 	gtk_text_set_point(GTK_TEXT(txt),0);
 	gtk_text_thaw(GTK_TEXT(txt));
 
-	if (curset.isProDVD == 0) {
+	if (curset.isDVD == 0) {
 		gtk_widget_set_sensitive(f1, FALSE);
 		gtk_widget_set_sensitive(l1, FALSE);
 		gtk_widget_set_sensitive(txt, FALSE);
@@ -3198,7 +3198,7 @@ gchar tmp[MAXLINE];
 	gtk_container_add (GTK_CONTAINER (f1), tbl);
 	gtk_widget_show(tbl);
 
-	if (!curset.isProDVD) {
+	if (!curset.isDVD) {
 		check = gtk_check_button_new_with_label(_("change CD Writer Device"));
 	} else {
 		check = gtk_check_button_new_with_label(_("change CD/DVD Writer Device"));
@@ -3220,7 +3220,7 @@ gchar tmp[MAXLINE];
 	gtk_widget_show(check);
 	define_tooltip(check, _("If enabled, then the user is allowed the change the write parameters for the CD Writer (e.g. Speed and FIFO-Buffer-Size)."));
 
-	if (!curset.isProDVD) {
+	if (!curset.isDVD) {
 		check = gtk_check_button_new_with_label(_("change CD Reader Device"));
 	} else {
 		check = gtk_check_button_new_with_label(_("change CD/DVD Reader Device"));
@@ -3387,7 +3387,7 @@ gint i;
 	gtk_notebook_append_page(GTK_NOTEBOOK (notebook),f1,l1);
 	draw_scsi_scan(f1);
 
-	if (!curset.isProDVD) {
+	if (!curset.isDVD) {
 		l2 = gtk_label_new(_("CD Settings"));
 	} else {
 		l2 = gtk_label_new(_("CD/DVD Settings"));
diff -up xcdroast-0.98alpha16/src/xtools.c.cdrkit xcdroast-0.98alpha16/src/xtools.c
--- xcdroast-0.98alpha16/src/xtools.c.cdrkit	2008-08-20 12:10:28.000000000 -0400
+++ xcdroast-0.98alpha16/src/xtools.c	2009-02-17 06:34:16.000000000 -0500
@@ -2403,7 +2403,7 @@ gchar tmp[MAXLINE];
 
 gint get_gracetime() {
 
-	if (curset.isProDVD && curset.cdrtype > 1000) {
+	if (curset.isDVD && curset.cdrtype > 1000) {
 		/* use 10 seconds for prodvd, because the keycheck
 		   can take a while... */
 		return 10;
@@ -3521,7 +3521,7 @@ gint isdvd,i;
 	isdvd = 0;
 	i = get_writerreaderdevs_index(devnr);
 
-	if (i >= 0 && curset.isProDVD && writerreaderdevs[i]->is_dvdwriter) {
+	if (i >= 0 && curset.isDVD && writerreaderdevs[i]->is_dvdwriter) {
 	        if (convert_devnr2busid(devnr,tmp) != 0) {
 	                g_error("non existing cdrom?");
 	        }
