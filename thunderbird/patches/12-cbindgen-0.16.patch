--- a/dom/webgpu/ipc/WebGPUParent.cpp
+++ b/dom/webgpu/ipc/WebGPUParent.cpp
@@ -418,27 +418,25 @@ ipc::IPCResult WebGPUParent::RecvDeviceC
     RawId aSelfId, const SerialBindGroupDescriptor& aDesc, RawId aNewId) {
   nsTArray<ffi::WGPUBindGroupEntry> ffiEntries(aDesc.mEntries.Length());
   for (const auto& entry : aDesc.mEntries) {
     ffi::WGPUBindGroupEntry bgb = {};
     bgb.binding = entry.mBinding;
     switch (entry.mType) {
       case SerialBindGroupEntryType::Buffer:
         bgb.resource.tag = ffi::WGPUBindingResource_Buffer;
-        bgb.resource.buffer._0.buffer = entry.mValue;
-        bgb.resource.buffer._0.offset = entry.mBufferOffset;
-        bgb.resource.buffer._0.size = entry.mBufferSize;
+        bgb.resource.buffer = {entry.mValue, entry.mBufferOffset, entry.mBufferSize};
         break;
       case SerialBindGroupEntryType::Texture:
         bgb.resource.tag = ffi::WGPUBindingResource_TextureView;
-        bgb.resource.texture_view._0 = entry.mValue;
+        bgb.resource.texture_view = {entry.mValue};
         break;
       case SerialBindGroupEntryType::Sampler:
         bgb.resource.tag = ffi::WGPUBindingResource_Sampler;
-        bgb.resource.sampler._0 = entry.mValue;
+        bgb.resource.sampler = {entry.mValue};
         break;
       default:
         MOZ_CRASH("unreachable");
     }
     ffiEntries.AppendElement(bgb);
   }
   ffi::WGPUBindGroupDescriptor desc = {};
   desc.layout = aDesc.mLayout;
