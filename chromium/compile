#!/bin/sh -eux

# patchset: https://github.com/stha09/chromium-patches
# clang_base_path=\"/usr\"

if [ $((`stat -f -c "%a" .`*`stat -f -c "%s" .`/(1024*1024*1024))) -lt 15 ]; then
	echo "At least 15 GB free space is required!"
	exit 1
fi

# gcc-vel sokkal gyorsabb a build, mivel használja a ccache-t
# linkelni viszont az lld-vel kell (use_lld=true), a többi elszáll
export CC=clang
export CXX=clang++
export AR=llvm-ar
export NM=nm

# ccache
export CCACHE_CPP2=yes
export CCACHE_SLOPPINESS=time_macros

_flags=("
custom_toolchain=\"//build/toolchain/linux/unbundle:default\"
host_toolchain=\"//build/toolchain/linux/unbundle:default\"
is_debug=false
cc_wrapper=\"ccache\"
is_clang=false
is_cfi=false
is_official_build=true
clang_use_chrome_plugins=false
fatal_linker_warnings=false
treat_warnings_as_errors=false
fieldtrial_testing_like_official_build=true
ffmpeg_branding=\"Chrome\"
proprietary_codecs=true
rtc_use_pipewire=true
use_gold=false
use_lld=true
use_sysroot=false
symbol_level=0
enable_linux_installer=false
enable_nacl=false
enable_swiftshader=false
enable_widevine=true
enable_hangout_services_extension=false
use_custom_libcxx=false
use_gnome_keyring=false
use_kerberos=false
icu_use_data_file=false
")

# rendszerből használadó libek
_syslibs=(
    ffmpeg
    flac
    fontconfig
    freetype
    harfbuzz-ng
    icu
    libdrm
    libevent
    libjpeg
    libpng
#    libvpx
    libwebp
    libxml
    libxslt
    opus
)

outdir="../object"

# Allow building against system libraries in official builds
sed -i 's/OFFICIAL_BUILD/GOOGLE_CHROME_BUILD/' tools/generate_shim_headers/generate_shim_headers.py

# external usb.ids (hwdata)
sed "s|//third_party/usb_ids/usb.ids|/usr/share/hwdata/usb.ids|g" -i services/device/public/cpp/usb/BUILD.gn

python3 build/linux/unbundle/replace_gn_files.py --system-libraries "${_syslibs[@]}"

# node
mkdir -p third_party/node/linux/node-linux-x64/bin
ln -s /usr/bin/node third_party/node/linux/node-linux-x64/bin/node

# llvm
# mkdir -p third_party/llvm-build/Release+Asserts/bin
# export PATH=`pwd`/third_party/llvm-build/Release+Asserts/bin:$PATH
# ln -s /usr/bin/clang third_party/llvm-build/Release+Asserts/bin/clang
# ln -s /usr/bin/clang++ third_party/llvm-build/Release+Asserts/bin/clang++

# Force script incompatible with Python 3 to use /usr/bin/python2
# sed -i '1s|python$|&2|' third_party/dom_distiller_js/protoc_plugins/*.py

# gn a buildhoz
tools/gn/bootstrap/bootstrap.py --build-path=$outdir --gn-gen-args=" ${_flags[@]} "

# extra flags
export LDFLAGS+="-Wl,-rpath,/usr/lib/chromium/ -Wl,--no-keep-memory"

# build options: az --args utáni sorok nem kezdődhetnek tab karakterrel!
$outdir/gn gen $outdir -v --args=" ${_flags[@]} " --script-executable=/usr/bin/python3

# gn args list - kihagyható, de segít a lehetséges opciók megadásához
# $outdir/gn args --list $UB_COMPILEDIR/$outdir > $UB_COMPILEDIR/$outdir/gn-args-full.list

# ninja
LC_ALL=C ninja -j 2 -C $outdir -v pdf chrome chrome_sandbox chromedriver
