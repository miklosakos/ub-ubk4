diff -Nur orig/apps/openmw/mwrender/sky.cpp mod/apps/openmw/mwrender/sky.cpp
--- orig/apps/openmw/mwrender/sky.cpp	2020-02-11 11:53:23.000000000 +0100
+++ mod/apps/openmw/mwrender/sky.cpp	2020-02-14 19:56:41.166903105 +0100
@@ -2,6 +2,7 @@
 
 #include <cmath>
 
+#include <osg/Version>
 #include <osg/ClipPlane>
 #include <osg/Fog>
 #include <osg/Transform>
@@ -557,27 +558,33 @@
     {
         osg::ref_ptr<osg::OcclusionQueryNode> oqn = new osg::OcclusionQueryNode;
         oqn->setQueriesEnabled(true);
-
+#if OSG_VERSION_LESS_THAN(3,6,5)
+        osg::Geometry* queryGeom = oqn->getQueryGeometry();
+#else
+        osg::ref_ptr<osg::QueryGeometry> queryGeom(new osg::QueryGeometry());
+#endif
         // Make it fast! A DYNAMIC query geometry means we can't break frame until the flare is rendered (which is rendered after all the other geometry,
         // so that would be pretty bad). STATIC should be safe, since our node's local bounds are static, thus computeBounds() which modifies the queryGeometry
         // is only called once.
         // Note the debug geometry setDebugDisplay(true) is always DYNAMIC and that can't be changed, not a big deal.
-        oqn->getQueryGeometry()->setDataVariance(osg::Object::STATIC);
+        queryGeom->setDataVariance(osg::Object::STATIC);
 
         // Set up the query geometry to match the actual sun's rendering shape. osg::OcclusionQueryNode wasn't originally intended to allow this,
         // normally it would automatically adjust the query geometry to match the sub graph's bounding box. The below hack is needed to
         // circumvent this.
-        osg::Geometry* queryGeom = oqn->getQueryGeometry();
         queryGeom->setVertexArray(mGeom->getVertexArray());
         queryGeom->setTexCoordArray(0, mGeom->getTexCoordArray(0), osg::Array::BIND_PER_VERTEX);
-        queryGeom->removePrimitiveSet(0, oqn->getQueryGeometry()->getNumPrimitiveSets());
+        queryGeom->removePrimitiveSet(0, queryGeom->getNumPrimitiveSets());
         queryGeom->addPrimitiveSet(mGeom->getPrimitiveSet(0));
 
+#if OSG_VERSION_LESS_THAN(3,6,5)
         // Hack to disable unwanted awful code inside OcclusionQueryNode::computeBound.
         oqn->setComputeBoundingSphereCallback(new DummyComputeBoundCallback);
         // Still need a proper bounding sphere.
         oqn->setInitialBound(queryGeom->getBound());
-
+#else
+        oqn->setQueryGeometry(queryGeom);
+#endif
         osg::StateSet* queryStateSet = new osg::StateSet;
         if (queryVisible)
         {
